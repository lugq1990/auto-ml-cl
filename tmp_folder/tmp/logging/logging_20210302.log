2021-03-02 11:07:39 - logger - INFO - Start logging for `logger`
2021-03-02 11:08:23 - logger - INFO - Start logging for `logger`
2021-03-02 11:08:23 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 11:08:24 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 11:08:24 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 11:08:24 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 11:08:24 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 11:08:24 - logger - WARNING - There isn't any trained models in folder: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\models
2021-03-02 11:08:24 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-02 11:08:24 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-02 11:08:24 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-02 11:08:24 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-02 11:08:24 - pipeline_training.py - INFO - Start to transform training data.
2021-03-02 11:08:24 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-02 11:08:24 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-02 11:08:24 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-02 11:08:24 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-02 11:08:24 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-02 11:08:24 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-02 11:08:41 - model_selection.py - INFO - Model selection training has finished.
2021-03-02 11:08:41 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-02 11:08:41 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.786526
2021-03-02 11:08:41 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.77384
2021-03-02 11:08:41 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.793539
2021-03-02 11:08:41 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-02 11:08:41 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.793539
2021-03-02 11:08:42 - model_selection.py - INFO - Start to save model: LogisticRegression-0.786526
2021-03-02 11:08:42 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.77384
2021-03-02 11:08:42 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.793539.pkl	LogisticRegression-0.786526.pkl	SupportVectorMachine-0.77384.pkl
2021-03-02 11:08:42 - pipeline_training.py - INFO - Training pipeline finished takes: 17 seconds.
2021-03-02 11:08:42 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-02 11:08:42 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 11:08:42 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 11:08:42 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 11:08:42 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 11:08:42 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-02 11:08:42 - model_ensemble.py - INFO - Stacking model score: 0.839161
2021-03-02 11:08:42 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-02 11:08:42 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-02 11:08:42 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-02 11:08:42 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-02 11:08:42 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-02 11:08:42 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-02 11:08:44 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-02 11:09:06 - neural_network_search.py - INFO - Get best scores are: [0.818182	0.776224	0.755245	0.72028	0.636364]
2021-03-02 11:09:06 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-02 11:09:06 - neural_network_search.py - INFO - Try to clean serach model space folder: PgySbOLHpW
2021-03-02 11:09:06 - neural_network_search.py - INFO - Folder: PgySbOLHpW has been deleted!
2021-03-02 11:09:06 - neural_network_search.py - INFO - Whole fitting logic finished used 22.562004804611206 seconds.
2021-03-02 11:09:06 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-02 11:09:07 - automl.py - INFO - Start to get prediction based on best trained model!
2021-03-02 11:09:07 - pipeline_training.py - INFO - Start to get model score for model: <auto_ml.base.model_selection.GridSearchModel object at 0x0000020B4E3E9F28>.
2021-03-02 11:09:07 - pipeline_training.py - INFO - Model: <auto_ml.base.model_selection.GridSearchModel object at 0x0000020B4E3E9F28> get score: 0.7654.
2021-03-02 11:09:07 - automl.py - INFO - Get score: 0.7653631284916201 based on best model!
2021-03-02 11:09:07 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-02 11:09:07 - automl.py - INFO - Prediction step finishes.
2021-03-02 11:09:07 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-02 11:09:07 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-02 11:09:07 - automl.py - INFO - Prediction step finishes.
2021-03-02 11:09:07 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.793539.pkl	LogisticRegression-0.786526.pkl	Stacking-0.839161.pkl	SupportVectorMachine-0.77384.pkl	DNN-0.636364.h5	DNN-0.72028.h5	DNN-0.755245.h5	DNN-0.776224.h5	DNN-0.818182.h5
2021-03-02 11:09:07 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.14679321922211852, n_estimators=500).
2021-03-02 11:09:07 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.14679321922211852, n_estimators=500) get score: 0.7654.
2021-03-02 11:09:07 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=3.914511927226385).
2021-03-02 11:09:07 - pipeline_training.py - INFO - Model: LogisticRegression(C=3.914511927226385) get score: 0.7765.
2021-03-02 11:09:07 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-03-02 11:09:07 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-03-02 11:09:08 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 11:09:08 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 11:09:08 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 11:09:08 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 11:09:08 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.7709.
2021-03-02 11:09:08 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=20).
2021-03-02 11:09:08 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=20) get score: 0.7821.
2021-03-02 11:09:08 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000020B5B716E48>.
2021-03-02 11:09:08 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000020B5B716E48> get score: 0.6145.
2021-03-02 11:09:08 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000020B5A6B3080>.
2021-03-02 11:09:08 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000020B5A6B3080> get score: 0.6760.
2021-03-02 11:09:08 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000020B5A5BB080>.
2021-03-02 11:09:08 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000020B5A5BB080> get score: 0.6704.
2021-03-02 11:09:08 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000020B5A6B30B8>.
2021-03-02 11:09:08 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000020B5A6B30B8> get score: 0.7430.
2021-03-02 11:09:08 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000020B5B7C7710>.
2021-03-02 11:09:08 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000020B5B7C7710> get score: 0.7095.
2021-03-02 14:57:04 - logger - INFO - Start logging for `logger`
2021-03-02 14:57:04 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 14:57:05 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 14:57:05 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 14:57:05 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 14:57:05 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 14:57:06 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-02 14:57:06 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-02 14:57:06 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-02 14:57:06 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-02 14:57:06 - pipeline_training.py - INFO - Start to transform training data.
2021-03-02 14:57:06 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-02 14:57:06 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-02 14:57:06 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-02 14:57:06 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-02 14:57:06 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-02 14:57:06 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-02 14:57:23 - model_selection.py - INFO - Model selection training has finished.
2021-03-02 14:57:23 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-02 14:57:23 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.786477
2021-03-02 14:57:23 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.79216
2021-03-02 14:57:23 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.803378
2021-03-02 14:57:23 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-02 14:57:23 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.803378
2021-03-02 14:57:23 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.79216
2021-03-02 14:57:23 - model_selection.py - INFO - Start to save model: LogisticRegression-0.786477
2021-03-02 14:57:23 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.803378.pkl	LogisticRegression-0.786477.pkl	SupportVectorMachine-0.79216.pkl
2021-03-02 14:57:23 - pipeline_training.py - INFO - Training pipeline finished takes: 18 seconds.
2021-03-02 14:57:23 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-02 14:57:23 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 14:57:23 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 14:57:23 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 14:57:23 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 14:57:23 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-02 14:57:24 - model_ensemble.py - INFO - Stacking model score: 0.825175
2021-03-02 14:57:24 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-02 14:57:24 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-02 14:57:24 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-02 14:57:24 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-02 14:57:24 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-02 14:57:24 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-02 14:57:24 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-02 15:02:51 - logger - INFO - Start logging for `logger`
2021-03-02 15:02:51 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 15:02:51 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 15:02:51 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 15:02:51 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 15:02:51 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 15:02:52 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-02 15:02:52 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-02 15:02:52 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-02 15:02:52 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-02 15:02:52 - pipeline_training.py - INFO - Start to transform training data.
2021-03-02 15:02:52 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-02 15:02:52 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-02 15:02:52 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-02 15:02:52 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-02 15:02:52 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-02 15:02:52 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-02 15:03:08 - model_selection.py - INFO - Model selection training has finished.
2021-03-02 15:03:08 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-02 15:03:08 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.786477
2021-03-02 15:03:08 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.769684
2021-03-02 15:03:08 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.766837
2021-03-02 15:03:08 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-02 15:03:08 - model_selection.py - INFO - Start to save model: LogisticRegression-0.786477
2021-03-02 15:03:08 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.769684
2021-03-02 15:03:08 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.766837
2021-03-02 15:03:08 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.766837.pkl	LogisticRegression-0.786477.pkl	SupportVectorMachine-0.769684.pkl
2021-03-02 15:03:08 - pipeline_training.py - INFO - Training pipeline finished takes: 17 seconds.
2021-03-02 15:03:08 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-02 15:03:08 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 15:03:08 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 15:03:09 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 15:03:09 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 15:03:09 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-02 15:03:10 - model_ensemble.py - INFO - Stacking model score: 0.79021
2021-03-02 15:03:10 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-02 15:03:10 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-02 15:03:10 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-02 15:03:10 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-02 15:03:10 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-02 15:03:10 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-02 15:03:10 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-02 15:03:35 - neural_network_search.py - INFO - Get best scores are: [0.783217	0.748252	0.713287	0.671329	0.643357]
2021-03-02 15:03:35 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-02 15:03:35 - neural_network_search.py - INFO - Try to clean serach model space folder: svEMHzPHgZ
2021-03-02 15:03:35 - neural_network_search.py - INFO - Folder: svEMHzPHgZ has been deleted!
2021-03-02 15:03:35 - neural_network_search.py - INFO - Whole fitting logic finished used 25.138044118881226 seconds.
2021-03-02 15:03:35 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-02 15:03:36 - automl.py - INFO - No need to validate!
2021-03-02 15:03:36 - automl.py - INFO - Start to get prediction based on best trained model!
2021-03-02 15:03:36 - pipeline_training.py - INFO - Start to get model score for model: <auto_ml.base.model_selection.GridSearchModel object at 0x0000016B39A81358>.
2021-03-02 15:03:36 - pipeline_training.py - INFO - Model: <auto_ml.base.model_selection.GridSearchModel object at 0x0000016B39A81358> get score: 0.7989.
2021-03-02 15:03:36 - automl.py - INFO - Get score: 0.7988826815642458 based on best model!
2021-03-02 15:03:36 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-02 15:03:36 - automl.py - INFO - Prediction step finishes.
2021-03-02 15:03:36 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-02 15:03:36 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-02 15:03:36 - automl.py - INFO - Prediction step finishes.
2021-03-02 15:03:36 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.766837.pkl	LogisticRegression-0.786477.pkl	Stacking-0.79021.pkl	SupportVectorMachine-0.769684.pkl	DNN-0.643357.h5	DNN-0.671329.h5	DNN-0.713287.h5	DNN-0.748252.h5	DNN-0.783217.h5
2021-03-02 15:03:36 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.3873785913709087).
2021-03-02 15:03:36 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.3873785913709087) get score: 0.7989.
2021-03-02 15:03:36 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=4.622177321061781).
2021-03-02 15:03:36 - pipeline_training.py - INFO - Model: LogisticRegression(C=4.622177321061781) get score: 0.7989.
2021-03-02 15:03:36 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-03-02 15:03:36 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-03-02 15:03:36 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 15:03:36 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 15:03:36 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 15:03:36 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 15:03:36 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.7989.
2021-03-02 15:03:36 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=5.55476523766277).
2021-03-02 15:03:36 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=5.55476523766277) get score: 0.7877.
2021-03-02 15:03:36 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000016B39B07D30>.
2021-03-02 15:03:37 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000016B39B07D30> get score: 0.6425.
2021-03-02 15:03:37 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000016B3DF07080>.
2021-03-02 15:03:37 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000016B3DF07080> get score: 0.7263.
2021-03-02 15:03:37 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000016B39ADAD30>.
2021-03-02 15:03:37 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000016B39ADAD30> get score: 0.7263.
2021-03-02 15:03:37 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000016B39B07BE0>.
2021-03-02 15:03:37 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000016B39B07BE0> get score: 0.7374.
2021-03-02 15:03:37 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000016B3E18EC50>.
2021-03-02 15:03:37 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000016B3E18EC50> get score: 0.7318.
2021-03-02 15:08:55 - logger - INFO - Start logging for `logger`
2021-03-02 15:08:56 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 15:08:56 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 15:08:56 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 15:08:56 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 15:08:56 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 15:13:01 - logger - INFO - Start logging for `logger`
2021-03-02 15:13:01 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 15:13:01 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 15:13:02 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 15:13:02 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 15:13:02 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 15:13:02 - logger - WARNING - There isn't any trained models in folder: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\models
2021-03-02 15:13:02 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-02 15:13:02 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-02 15:13:02 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-02 15:13:02 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-02 15:13:02 - pipeline_training.py - INFO - Start to transform training data.
2021-03-02 15:13:02 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-02 15:13:02 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-02 15:13:02 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-02 15:13:02 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-02 15:13:02 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-02 15:13:02 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-02 15:13:15 - model_selection.py - INFO - Model selection training has finished.
2021-03-02 15:13:15 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-02 15:13:15 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.780283
2021-03-02 15:13:15 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.778497
2021-03-02 15:13:15 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.79261
2021-03-02 15:13:15 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-02 15:13:15 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.79261
2021-03-02 15:13:15 - model_selection.py - INFO - Start to save model: LogisticRegression-0.780283
2021-03-02 15:13:15 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.778497
2021-03-02 15:13:15 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.79261.pkl	LogisticRegression-0.780283.pkl	SupportVectorMachine-0.778497.pkl
2021-03-02 15:13:15 - pipeline_training.py - INFO - Training pipeline finished takes: 13 seconds.
2021-03-02 15:13:15 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-02 15:13:15 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 15:13:15 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 15:13:15 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 15:13:15 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 15:13:15 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-02 15:13:16 - model_ensemble.py - INFO - Stacking model score: 0.833333
2021-03-02 15:13:16 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-02 15:13:16 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-02 15:13:16 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-02 15:13:16 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-02 15:13:16 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-02 15:13:16 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-02 15:13:17 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-02 15:13:39 - neural_network_search.py - INFO - Get best scores are: [0.789474	0.719298	0.684211	0.675439	0.666667]
2021-03-02 15:13:39 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-02 15:13:39 - neural_network_search.py - INFO - Try to clean serach model space folder: kpslFCbtbs
2021-03-02 15:13:40 - neural_network_search.py - INFO - Folder: kpslFCbtbs has been deleted!
2021-03-02 15:13:40 - neural_network_search.py - INFO - Whole fitting logic finished used 22.99208950996399 seconds.
2021-03-02 15:13:40 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-02 15:15:14 - logger - INFO - Start logging for `logger`
2021-03-02 15:15:14 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 15:15:15 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 15:15:15 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 15:15:15 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 15:15:15 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 15:15:16 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-02 15:15:16 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-02 15:15:16 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-02 15:15:16 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-02 15:15:16 - pipeline_training.py - INFO - Start to transform training data.
2021-03-02 15:15:16 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-02 15:15:16 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-02 15:15:16 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-02 15:15:16 - pipeline_training.py - INFO - After processing, data shape: 16
2021-03-02 15:15:16 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-02 15:15:16 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-02 15:15:33 - model_selection.py - INFO - Model selection training has finished.
2021-03-02 15:15:33 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-02 15:15:33 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.769725
2021-03-02 15:15:33 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.769741
2021-03-02 15:15:33 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.75215
2021-03-02 15:15:33 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-02 15:15:33 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.769741
2021-03-02 15:15:33 - model_selection.py - INFO - Start to save model: LogisticRegression-0.769725
2021-03-02 15:15:33 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.75215
2021-03-02 15:15:33 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.75215.pkl	LogisticRegression-0.769725.pkl	SupportVectorMachine-0.769741.pkl
2021-03-02 15:15:33 - pipeline_training.py - INFO - Training pipeline finished takes: 17 seconds.
2021-03-02 15:15:33 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-02 15:15:33 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 15:15:33 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 15:15:33 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 15:15:33 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 15:15:33 - model_ensemble.py - INFO - Before stacking we have data dimention: 16, after stacking we have :19
2021-03-02 15:15:34 - model_ensemble.py - INFO - Stacking model score: 0.842105
2021-03-02 15:15:34 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-02 15:15:34 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-02 15:15:34 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-02 15:15:34 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-02 15:15:34 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-02 15:15:34 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-02 15:15:34 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-02 15:15:59 - neural_network_search.py - INFO - Get best scores are: [0.77193	0.745614	0.72807	0.710526	0.701754]
2021-03-02 15:15:59 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-02 15:15:59 - neural_network_search.py - INFO - Try to clean serach model space folder: UYjqAsQoTx
2021-03-02 15:15:59 - neural_network_search.py - INFO - Folder: UYjqAsQoTx has been deleted!
2021-03-02 15:15:59 - neural_network_search.py - INFO - Whole fitting logic finished used 25.03523302078247 seconds.
2021-03-02 15:15:59 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-02 15:16:00 - automl.py - INFO - Start to validate trained models.
2021-03-02 15:20:10 - logger - INFO - Start logging for `logger`
2021-03-02 15:20:10 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 15:20:11 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 15:20:11 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 15:20:11 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 15:20:11 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 15:20:12 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-02 15:20:12 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-02 15:20:12 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-02 15:20:12 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-02 15:20:12 - pipeline_training.py - INFO - Start to transform training data.
2021-03-02 15:20:12 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-02 15:20:12 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-02 15:20:12 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-02 15:20:12 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-02 15:20:12 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-02 15:20:12 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-02 15:20:27 - model_selection.py - INFO - Model selection training has finished.
2021-03-02 15:20:27 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-02 15:20:27 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.79615
2021-03-02 15:20:27 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.768048
2021-03-02 15:20:27 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.768033
2021-03-02 15:20:27 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-02 15:20:27 - model_selection.py - INFO - Start to save model: LogisticRegression-0.79615
2021-03-02 15:20:27 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.768048
2021-03-02 15:20:27 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.768033
2021-03-02 15:20:27 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.768033.pkl	LogisticRegression-0.79615.pkl	SupportVectorMachine-0.768048.pkl
2021-03-02 15:20:27 - pipeline_training.py - INFO - Training pipeline finished takes: 15 seconds.
2021-03-02 15:20:27 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-02 15:20:27 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 15:20:27 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 15:20:27 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 15:20:27 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 15:20:27 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-02 15:20:28 - model_ensemble.py - INFO - Stacking model score: 0.815789
2021-03-02 15:20:28 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-02 15:20:28 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-02 15:20:28 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-02 15:20:28 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-02 15:20:28 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-02 15:20:28 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-02 15:20:28 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-02 15:20:54 - neural_network_search.py - INFO - Get best scores are: [0.763158	0.754386	0.736842	0.719298	0.675439]
2021-03-02 15:20:54 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-02 15:20:54 - neural_network_search.py - INFO - Try to clean serach model space folder: HoLQTwiBpz
2021-03-02 15:20:55 - neural_network_search.py - INFO - Folder: HoLQTwiBpz has been deleted!
2021-03-02 15:20:55 - neural_network_search.py - INFO - Whole fitting logic finished used 26.748448371887207 seconds.
2021-03-02 15:20:55 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-02 15:20:55 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.768033.pkl	LogisticRegression-0.79615.pkl	Stacking-0.815789.pkl	SupportVectorMachine-0.768048.pkl	DNN-0.675439.h5	DNN-0.719298.h5	DNN-0.736842.h5	DNN-0.754386.h5	DNN-0.763158.h5
2021-03-02 15:20:55 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.42684779700041786, n_estimators=500).
2021-03-02 15:20:55 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.42684779700041786, n_estimators=500) get score: 0.7832.
2021-03-02 15:20:55 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=7.937999537514816).
2021-03-02 15:20:55 - pipeline_training.py - INFO - Model: LogisticRegression(C=7.937999537514816) get score: 0.8042.
2021-03-02 15:20:55 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-03-02 15:20:55 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-03-02 15:20:56 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 15:20:56 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 15:20:56 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 15:20:56 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 15:20:56 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.7762.
2021-03-02 15:20:56 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=1.8188940799995124).
2021-03-02 15:20:56 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=1.8188940799995124) get score: 0.7692.
2021-03-02 15:20:56 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A3C619E8>.
2021-03-02 15:20:56 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A3C619E8> get score: 0.6154.
2021-03-02 15:20:56 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A506B940>.
2021-03-02 15:20:56 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A506B940> get score: 0.7203.
2021-03-02 15:20:56 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A4ED9AC8>.
2021-03-02 15:20:56 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A4ED9AC8> get score: 0.7063.
2021-03-02 15:20:56 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A4EFD828>.
2021-03-02 15:20:56 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A4EFD828> get score: 0.7343.
2021-03-02 15:20:56 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A4DD9860>.
2021-03-02 15:20:57 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A4DD9860> get score: 0.6294.
2021-03-02 15:20:57 - automl.py - INFO - Start to get prediction based on best trained model!
2021-03-02 15:20:57 - pipeline_training.py - INFO - Start to get model score for model: <auto_ml.base.model_selection.GridSearchModel object at 0x00000212970ADA20>.
2021-03-02 15:20:57 - pipeline_training.py - INFO - Model: <auto_ml.base.model_selection.GridSearchModel object at 0x00000212970ADA20> get score: 0.7989.
2021-03-02 15:20:57 - automl.py - INFO - Get score: 0.7988826815642458 based on best model!
2021-03-02 15:20:57 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-02 15:20:57 - automl.py - INFO - Prediction step finishes.
2021-03-02 15:20:57 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-02 15:20:57 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-02 15:20:57 - automl.py - INFO - Prediction step finishes.
2021-03-02 15:20:57 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.768033.pkl	LogisticRegression-0.79615.pkl	Stacking-0.815789.pkl	SupportVectorMachine-0.768048.pkl	DNN-0.675439.h5	DNN-0.719298.h5	DNN-0.736842.h5	DNN-0.754386.h5	DNN-0.763158.h5
2021-03-02 15:20:57 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.42684779700041786, n_estimators=500).
2021-03-02 15:20:57 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.42684779700041786, n_estimators=500) get score: 0.8045.
2021-03-02 15:20:57 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=7.937999537514816).
2021-03-02 15:20:57 - pipeline_training.py - INFO - Model: LogisticRegression(C=7.937999537514816) get score: 0.7989.
2021-03-02 15:20:57 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-03-02 15:20:57 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-03-02 15:20:57 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 15:20:57 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 15:20:57 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 15:20:57 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 15:20:57 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.8045.
2021-03-02 15:20:57 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=1.8188940799995124).
2021-03-02 15:20:57 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=1.8188940799995124) get score: 0.7989.
2021-03-02 15:20:57 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A504D5F8>.
2021-03-02 15:20:58 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A504D5F8> get score: 0.6313.
2021-03-02 15:20:58 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A61B57B8>.
2021-03-02 15:20:58 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A61B57B8> get score: 0.7821.
2021-03-02 15:20:58 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A61AE780>.
2021-03-02 15:20:58 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A61AE780> get score: 0.7486.
2021-03-02 15:20:58 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A60E4BE0>.
2021-03-02 15:20:58 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A60E4BE0> get score: 0.7207.
2021-03-02 15:20:58 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A5065E10>.
2021-03-02 15:20:58 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000212A5065E10> get score: 0.6983.
2021-03-02 15:25:12 - logger - INFO - Start logging for `logger`
2021-03-02 15:25:12 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 15:25:13 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 15:25:13 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 15:25:13 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 15:25:13 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 15:25:13 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-02 15:25:13 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-02 15:25:13 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-02 15:25:13 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-02 15:25:13 - pipeline_training.py - INFO - Start to transform training data.
2021-03-02 15:25:13 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-02 15:25:13 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-02 15:25:14 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-02 15:25:14 - pipeline_training.py - INFO - After processing, data shape: 16
2021-03-02 15:25:14 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-02 15:25:14 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-02 15:25:27 - model_selection.py - INFO - Model selection training has finished.
2021-03-02 15:25:27 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-02 15:25:27 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.811877
2021-03-02 15:25:27 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.790793
2021-03-02 15:25:27 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.80309
2021-03-02 15:25:27 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-02 15:25:27 - model_selection.py - INFO - Start to save model: LogisticRegression-0.811877
2021-03-02 15:25:27 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.80309
2021-03-02 15:25:27 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.790793
2021-03-02 15:25:27 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.80309.pkl	LogisticRegression-0.811877.pkl	SupportVectorMachine-0.790793.pkl
2021-03-02 15:25:27 - pipeline_training.py - INFO - Training pipeline finished takes: 13 seconds.
2021-03-02 15:25:27 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-02 15:25:27 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 15:25:27 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 15:25:27 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 15:25:27 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 15:25:27 - model_ensemble.py - INFO - Before stacking we have data dimention: 16, after stacking we have :19
2021-03-02 15:25:28 - model_ensemble.py - INFO - Stacking model score: 0.789474
2021-03-02 15:25:28 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-02 15:25:28 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-02 15:25:28 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-02 15:25:28 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-02 15:25:28 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-02 15:25:28 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-02 15:25:28 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-02 15:25:33 - neural_network_search.py - INFO - Get best scores are: [0.666667]
2021-03-02 15:25:33 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-02 15:25:33 - neural_network_search.py - INFO - Try to clean serach model space folder: IfMagGCAMT
2021-03-02 15:25:33 - neural_network_search.py - INFO - Folder: IfMagGCAMT has been deleted!
2021-03-02 15:25:33 - neural_network_search.py - INFO - Whole fitting logic finished used 5.898221492767334 seconds.
2021-03-02 15:25:33 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-02 15:25:34 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.80309.pkl	LogisticRegression-0.811877.pkl	Stacking-0.789474.pkl	SupportVectorMachine-0.790793.pkl	DNN-0.666667.h5
2021-03-02 15:25:34 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.024511079394915182).
2021-03-02 15:25:34 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.024511079394915182) get score: 0.8042.
2021-03-02 15:25:34 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=0.9450450779712414).
2021-03-02 15:25:34 - pipeline_training.py - INFO - Model: LogisticRegression(C=0.9450450779712414) get score: 0.8112.
2021-03-02 15:25:34 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-03-02 15:25:34 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-03-02 15:25:34 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 15:25:34 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 15:25:34 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 15:25:34 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 15:25:34 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.7902.
2021-03-02 15:25:34 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=1.5383468226381762).
2021-03-02 15:25:34 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=1.5383468226381762) get score: 0.7972.
2021-03-02 15:25:34 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000018462FF1F28>.
2021-03-02 15:25:34 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000018462FF1F28> get score: 0.5944.
2021-03-02 15:48:24 - logger - INFO - Start logging for `logger`
2021-03-02 15:48:24 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 15:48:24 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 15:48:25 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 15:48:25 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 15:48:25 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 15:48:25 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-02 15:48:25 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-02 15:48:25 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-02 15:48:25 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-02 15:48:25 - pipeline_training.py - INFO - Start to transform training data.
2021-03-02 15:48:25 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-02 15:48:25 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-02 15:48:25 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-02 15:48:25 - pipeline_training.py - INFO - After processing, data shape: 16
2021-03-02 15:48:25 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-02 15:48:25 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-02 15:48:40 - model_selection.py - INFO - Model selection training has finished.
2021-03-02 15:48:40 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-02 15:48:40 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.796119
2021-03-02 15:48:40 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.778621
2021-03-02 15:48:40 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.775082
2021-03-02 15:48:40 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-02 15:48:40 - model_selection.py - INFO - Start to save model: LogisticRegression-0.796119
2021-03-02 15:48:40 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.778621
2021-03-02 15:48:40 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.775082
2021-03-02 15:48:40 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.775082.pkl	LogisticRegression-0.796119.pkl	SupportVectorMachine-0.778621.pkl
2021-03-02 15:48:40 - pipeline_training.py - INFO - Training pipeline finished takes: 14 seconds.
2021-03-02 15:48:40 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-02 15:48:40 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 15:48:40 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 15:48:40 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 15:48:40 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 15:48:40 - model_ensemble.py - INFO - Before stacking we have data dimention: 16, after stacking we have :19
2021-03-02 15:48:41 - model_ensemble.py - INFO - Stacking model score: 0.798246
2021-03-02 15:48:41 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-02 15:48:41 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-02 15:48:41 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-02 15:48:41 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-02 15:48:41 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-02 15:48:41 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-02 15:48:41 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-02 15:48:48 - neural_network_search.py - INFO - Get best scores are: [0.596491]
2021-03-02 15:48:48 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-02 15:48:48 - neural_network_search.py - INFO - Try to clean serach model space folder: SYMlPFFKXx
2021-03-02 15:48:48 - neural_network_search.py - INFO - Folder: SYMlPFFKXx has been deleted!
2021-03-02 15:48:48 - neural_network_search.py - INFO - Whole fitting logic finished used 6.8436949253082275 seconds.
2021-03-02 15:48:48 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-02 15:48:48 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.775082.pkl	LogisticRegression-0.796119.pkl	Stacking-0.798246.pkl	SupportVectorMachine-0.778621.pkl	DNN-0.596491.h5
2021-03-02 15:48:48 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.9238251613561784, n_estimators=300).
2021-03-02 15:48:48 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.9238251613561784, n_estimators=300) get score: 0.7832.
2021-03-02 15:48:48 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=0.6565483576771778).
2021-03-02 15:48:48 - pipeline_training.py - INFO - Model: LogisticRegression(C=0.6565483576771778) get score: 0.7622.
2021-03-02 15:48:48 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-03-02 15:48:48 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-03-02 15:48:48 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 15:48:48 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 15:48:48 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 15:48:48 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 15:48:48 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.7762.
2021-03-02 15:48:48 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=10).
2021-03-02 15:48:48 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=10) get score: 0.7622.
2021-03-02 15:48:48 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000002C45E1F7278>.
2021-03-02 15:48:48 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000002C45E1F7278> get score: 0.5734.
2021-03-02 15:48:48 - automl.py - INFO - Get validation score: 	GradientBoostingTree-0.775082.pkl0.7832167832167832	Stacking-0.798246.pkl0.7762237762237763	LogisticRegression-0.796119.pkl0.7622377622377622	SupportVectorMachine-0.778621.pkl0.7622377622377622	DNN-0.596491.h50.5734265734265734
2021-03-02 15:48:48 - automl.py - INFO - Start to get prediction based on best trained model!
2021-03-02 15:48:48 - pipeline_training.py - INFO - Start to get model score for model: <auto_ml.base.model_selection.GridSearchModel object at 0x000002C45DF2EDA0>.
2021-03-02 15:48:48 - pipeline_training.py - INFO - Model: <auto_ml.base.model_selection.GridSearchModel object at 0x000002C45DF2EDA0> get score: 0.8212.
2021-03-02 15:48:48 - automl.py - INFO - Get score: 0.8212290502793296 based on best model!
2021-03-02 15:48:48 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-02 15:48:48 - automl.py - INFO - Prediction step finishes.
2021-03-02 15:48:48 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-02 15:48:48 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-02 15:48:48 - automl.py - INFO - Prediction step finishes.
2021-03-02 15:48:48 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.775082.pkl	LogisticRegression-0.796119.pkl	Stacking-0.798246.pkl	SupportVectorMachine-0.778621.pkl	DNN-0.596491.h5
2021-03-02 15:48:48 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.9238251613561784, n_estimators=300).
2021-03-02 15:48:48 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.9238251613561784, n_estimators=300) get score: 0.8156.
2021-03-02 15:48:48 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=0.6565483576771778).
2021-03-02 15:48:48 - pipeline_training.py - INFO - Model: LogisticRegression(C=0.6565483576771778) get score: 0.8212.
2021-03-02 15:48:48 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-03-02 15:48:48 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-03-02 15:48:48 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 15:48:48 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 15:48:48 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 15:48:48 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 15:48:48 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.8212.
2021-03-02 15:48:48 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=10).
2021-03-02 15:48:48 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=10) get score: 0.7989.
2021-03-02 15:48:48 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000002C45E1E6FD0>.
2021-03-02 15:48:48 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000002C45E1E6FD0> get score: 0.6201.
2021-03-02 15:58:11 - logger - INFO - Start logging for `logger`
2021-03-02 15:58:11 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 15:58:11 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 15:58:12 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 15:58:12 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 15:58:12 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 15:58:12 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-02 15:58:12 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-02 15:58:12 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-02 15:58:12 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-02 15:58:12 - pipeline_training.py - INFO - Start to transform training data.
2021-03-02 15:58:12 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-02 15:58:12 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-02 15:58:12 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-02 15:58:12 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-02 15:58:12 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-02 15:58:12 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-02 15:58:30 - model_selection.py - INFO - Model selection training has finished.
2021-03-02 15:58:30 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-02 15:58:30 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.796425
2021-03-02 15:58:30 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.778115
2021-03-02 15:58:30 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.778085
2021-03-02 15:58:30 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-02 15:58:30 - model_selection.py - INFO - Start to save model: LogisticRegression-0.796425
2021-03-02 15:58:30 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.778115
2021-03-02 15:58:30 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.778085
2021-03-02 15:58:30 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.778085.pkl	LogisticRegression-0.796425.pkl	SupportVectorMachine-0.778115.pkl
2021-03-02 15:58:30 - pipeline_training.py - INFO - Training pipeline finished takes: 17 seconds.
2021-03-02 15:58:30 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-02 15:58:30 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 15:58:30 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 15:58:30 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 15:58:30 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 15:58:30 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-02 15:58:31 - model_ensemble.py - INFO - Stacking model score: 0.783217
2021-03-02 15:58:31 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-02 15:58:31 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-02 15:58:31 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-02 15:58:31 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-02 15:58:31 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-02 15:58:31 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-02 15:58:31 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-02 15:58:38 - neural_network_search.py - INFO - Get best scores are: [0.58042]
2021-03-02 15:58:38 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-02 15:58:38 - neural_network_search.py - INFO - Try to clean serach model space folder: oSujHBaOBt
2021-03-02 15:58:38 - neural_network_search.py - INFO - Folder: oSujHBaOBt has been deleted!
2021-03-02 15:58:38 - neural_network_search.py - INFO - Whole fitting logic finished used 7.045155048370361 seconds.
2021-03-02 15:58:38 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-02 15:58:39 - automl.py - WARNING - No need to validation!
2021-03-02 15:58:39 - automl.py - INFO - Start to get prediction based on best trained model!
2021-03-02 15:58:39 - pipeline_training.py - INFO - Start to get model score for model: <auto_ml.base.model_selection.GridSearchModel object at 0x000001C3576FDA90>.
2021-03-02 15:58:39 - pipeline_training.py - INFO - Model: <auto_ml.base.model_selection.GridSearchModel object at 0x000001C3576FDA90> get score: 0.7877.
2021-03-02 15:58:39 - automl.py - INFO - Get score: 0.7877094972067039 based on best model!
2021-03-02 15:58:39 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-02 15:58:39 - automl.py - INFO - Prediction step finishes.
2021-03-02 15:58:39 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-02 15:58:39 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-02 15:58:39 - automl.py - INFO - Prediction step finishes.
2021-03-02 15:58:39 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.778085.pkl	LogisticRegression-0.796425.pkl	Stacking-0.783217.pkl	SupportVectorMachine-0.778115.pkl	DNN-0.58042.h5
2021-03-02 15:58:39 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.6285072810666931).
2021-03-02 15:58:39 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.6285072810666931) get score: 0.7821.
2021-03-02 15:58:39 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=0.9704500821291616).
2021-03-02 15:58:39 - pipeline_training.py - INFO - Model: LogisticRegression(C=0.9704500821291616) get score: 0.7877.
2021-03-02 15:58:39 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-03-02 15:58:39 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-03-02 15:58:39 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 15:58:39 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 15:58:39 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 15:58:39 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 15:58:39 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.7821.
2021-03-02 15:58:39 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=1.0110552730881837).
2021-03-02 15:58:39 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=1.0110552730881837) get score: 0.7877.
2021-03-02 15:58:39 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000001C360EEABE0>.
2021-03-02 15:58:39 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000001C360EEABE0> get score: 0.6704.
2021-03-02 16:41:56 - logger - INFO - Start logging for `logger`
2021-03-02 16:41:56 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 16:41:56 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 16:41:57 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 16:41:57 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 16:41:57 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 16:41:57 - automl.py - ERROR - Error load data file: processed_data.csv from path: C:\Users\guangqiiang.lu\Documents\lugq\code_for_future\auto_ml_pro\auto_ml\tmp_folder\tmp\processed_data.csv
2021-03-02 17:24:12 - logger - INFO - Start logging for `logger`
2021-03-02 17:24:12 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 17:24:12 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 17:24:13 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 17:24:13 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 17:24:13 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 17:25:45 - logger - INFO - Start logging for `logger`
2021-03-02 17:25:45 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 17:25:45 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 17:25:46 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 17:25:46 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 17:25:46 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 17:27:02 - logger - INFO - Start logging for `logger`
2021-03-02 17:27:02 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 17:27:02 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 17:27:02 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 17:27:02 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 17:27:02 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 17:29:19 - logger - INFO - Start logging for `logger`
2021-03-02 17:29:19 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 17:29:20 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 17:29:20 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 17:29:20 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 17:29:20 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 17:30:09 - logger - INFO - Start logging for `logger`
2021-03-02 17:30:09 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 17:30:09 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 17:30:10 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 17:30:10 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 17:30:10 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 17:30:43 - logger - INFO - Start logging for `logger`
2021-03-02 17:30:43 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 17:30:43 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 17:30:44 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 17:30:44 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 17:30:44 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 18:11:53 - logger - INFO - Start logging for `logger`
2021-03-02 18:11:53 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 18:11:53 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 18:11:54 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 18:11:54 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 18:11:54 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 18:14:42 - logger - INFO - Start logging for `logger`
2021-03-02 18:14:42 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 18:14:42 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 18:14:43 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 18:14:43 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 18:14:43 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 18:15:13 - logger - INFO - Start logging for `logger`
2021-03-02 18:15:13 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 18:15:13 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 18:15:14 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 18:15:14 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 18:15:14 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 18:18:36 - logger - INFO - Start logging for `logger`
2021-03-02 18:18:36 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 18:18:36 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 18:18:36 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 18:18:36 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 18:18:36 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 18:19:10 - logger - INFO - Start logging for `logger`
2021-03-02 18:19:10 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 18:19:10 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 18:19:11 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 18:19:11 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 18:19:11 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 18:27:51 - logger - INFO - Start logging for `logger`
2021-03-02 18:27:51 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 18:27:51 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 18:27:52 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 18:27:52 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 18:27:52 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 18:28:19 - logger - INFO - Start logging for `logger`
2021-03-02 18:28:19 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 18:28:20 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 18:28:20 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 18:28:20 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 18:28:20 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 18:28:21 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-02 18:28:21 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-02 18:28:21 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-02 18:28:21 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-02 18:28:21 - pipeline_training.py - INFO - Start to transform training data.
2021-03-02 18:28:21 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-02 18:28:21 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-02 18:28:21 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-02 18:28:21 - pipeline_training.py - INFO - After processing, data shape: 16
2021-03-02 18:28:21 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-02 18:28:21 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-02 18:28:44 - model_selection.py - INFO - Model selection training has finished.
2021-03-02 18:28:44 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-02 18:28:44 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.780961
2021-03-02 18:28:44 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.790791
2021-03-02 18:28:44 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.789392
2021-03-02 18:28:44 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-02 18:28:44 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.790791
2021-03-02 18:28:44 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.789392
2021-03-02 18:28:44 - model_selection.py - INFO - Start to save model: LogisticRegression-0.780961
2021-03-02 18:28:44 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.789392.pkl	LogisticRegression-0.780961.pkl	SupportVectorMachine-0.790791.pkl
2021-03-02 18:28:44 - pipeline_training.py - INFO - Training pipeline finished takes: 23 seconds.
2021-03-02 18:28:44 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-02 18:28:44 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 18:28:44 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 18:28:44 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 18:28:44 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 18:28:44 - model_ensemble.py - INFO - Before stacking we have data dimention: 16, after stacking we have :19
2021-03-02 18:28:45 - model_ensemble.py - INFO - Stacking model score: 0.811189
2021-03-02 18:28:45 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-02 18:28:45 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-02 18:28:45 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-02 18:28:45 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-02 18:28:45 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-02 18:28:45 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-02 18:28:45 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-02 18:28:54 - neural_network_search.py - INFO - Get best scores are: [0.573427]
2021-03-02 18:28:54 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-02 18:28:54 - neural_network_search.py - INFO - Try to clean serach model space folder: GjFGTtVuBx
2021-03-02 18:28:54 - neural_network_search.py - INFO - Folder: GjFGTtVuBx has been deleted!
2021-03-02 18:28:54 - neural_network_search.py - INFO - Whole fitting logic finished used 9.109353065490723 seconds.
2021-03-02 18:28:54 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-02 18:28:55 - automl.py - WARNING - No need to validation!
2021-03-02 18:28:55 - automl.py - INFO - Start to get prediction based on best trained model!
2021-03-02 18:28:55 - pipeline_training.py - INFO - Start to get model score for model: <auto_ml.base.model_selection.GridSearchModel object at 0x00000214443C28D0>.
2021-03-02 18:28:55 - pipeline_training.py - INFO - Model: <auto_ml.base.model_selection.GridSearchModel object at 0x00000214443C28D0> get score: 0.7877.
2021-03-02 18:28:55 - automl.py - INFO - Get score: 0.7877094972067039 based on best model!
2021-03-02 18:28:55 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-02 18:28:55 - automl.py - INFO - Prediction step finishes.
2021-03-02 18:28:55 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-02 18:28:55 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-02 18:28:55 - automl.py - INFO - Prediction step finishes.
2021-03-02 18:28:55 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.789392.pkl	LogisticRegression-0.780961.pkl	Stacking-0.811189.pkl	SupportVectorMachine-0.790791.pkl	DNN-0.573427.h5
2021-03-02 18:28:55 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.6434133288235918).
2021-03-02 18:28:55 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.6434133288235918) get score: 0.7989.
2021-03-02 18:28:55 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=6.45212519525645).
2021-03-02 18:28:55 - pipeline_training.py - INFO - Model: LogisticRegression(C=6.45212519525645) get score: 0.8380.
2021-03-02 18:28:55 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-03-02 18:28:55 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-03-02 18:28:55 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 18:28:55 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 18:28:55 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 18:28:55 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 18:28:55 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.7933.
2021-03-02 18:28:55 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=10).
2021-03-02 18:28:55 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=10) get score: 0.7877.
2021-03-02 18:28:55 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000002145D6409E8>.
2021-03-02 18:28:55 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000002145D6409E8> get score: 0.5978.
2021-03-02 18:31:33 - logger - INFO - Start logging for `logger`
2021-03-02 18:31:33 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-02 18:31:33 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-02 18:31:33 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-02 18:31:33 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-02 18:31:33 - automl.py - INFO - Start logging for `automl.py`
2021-03-02 18:31:34 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-02 18:31:34 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-02 18:31:34 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-02 18:31:34 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-02 18:31:34 - pipeline_training.py - INFO - Start to transform training data.
2021-03-02 18:31:34 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-02 18:31:34 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-02 18:31:34 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-02 18:31:34 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-02 18:31:34 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-02 18:31:34 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-02 18:31:55 - model_selection.py - INFO - Model selection training has finished.
2021-03-02 18:31:55 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-02 18:31:55 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.794627
2021-03-02 18:31:55 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.778922
2021-03-02 18:31:55 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.794639
2021-03-02 18:31:55 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-02 18:31:55 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.794639
2021-03-02 18:31:55 - model_selection.py - INFO - Start to save model: LogisticRegression-0.794627
2021-03-02 18:31:55 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.778922
2021-03-02 18:31:55 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.794639.pkl	LogisticRegression-0.794627.pkl	SupportVectorMachine-0.778922.pkl
2021-03-02 18:31:55 - pipeline_training.py - INFO - Training pipeline finished takes: 21 seconds.
2021-03-02 18:31:55 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-02 18:31:55 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-02 18:31:55 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-02 18:31:55 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-02 18:31:55 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-02 18:31:55 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-02 18:31:57 - model_ensemble.py - INFO - Stacking model score: 0.804469
2021-03-02 18:31:57 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-02 18:31:57 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-02 18:31:57 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-02 18:31:57 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-02 18:31:57 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-02 18:31:57 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-02 18:31:57 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-02 18:32:05 - neural_network_search.py - INFO - Get best scores are: [0.810056]
2021-03-02 18:32:05 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-02 18:32:05 - neural_network_search.py - INFO - Try to clean serach model space folder: puUIrrwLmV
2021-03-02 18:32:05 - neural_network_search.py - INFO - Folder: puUIrrwLmV has been deleted!
2021-03-02 18:32:05 - neural_network_search.py - INFO - Whole fitting logic finished used 8.031097888946533 seconds.
2021-03-02 18:32:05 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-02 18:32:05 - automl.py - WARNING - No need to validation!
