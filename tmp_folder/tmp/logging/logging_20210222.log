2021-02-22 10:10:15 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:11:44 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:12:23 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:14:36 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:14:37 - neural_network_search.py - INFO - Get 3 classes problem.
2021-02-22 10:14:37 - neural_network_search.py - INFO - Start to get model instance for algorithms: DNN
2021-02-22 10:14:37 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-02-22 10:16:26 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:16:27 - neural_network_search.py - INFO - Get 3 classes problem.
2021-02-22 10:16:27 - neural_network_search.py - INFO - Start to get model instance for algorithms: DNN
2021-02-22 10:16:27 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-02-22 10:17:09 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:17:11 - neural_network_search.py - INFO - Get 3 classes problem.
2021-02-22 10:17:11 - neural_network_search.py - INFO - Start to get model instance for algorithms: DNN
2021-02-22 10:17:11 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-02-22 10:17:11 - neural_network_search.py - INFO - Start to search neural network models.
2021-02-22 10:34:25 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:34:26 - neural_network_search.py - INFO - Get 3 classes problem.
2021-02-22 10:34:26 - neural_network_search.py - INFO - Start to get model instance for algorithms: DNN
2021-02-22 10:34:26 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-02-22 10:34:26 - neural_network_search.py - INFO - Start to search neural network models.
2021-02-22 10:37:03 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:37:04 - neural_network_search.py - INFO - Get 3 classes problem.
2021-02-22 10:37:04 - neural_network_search.py - INFO - Start to get model instance for algorithms: DNN
2021-02-22 10:37:04 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-02-22 10:37:04 - neural_network_search.py - INFO - Start to search neural network models.
2021-02-22 10:38:22 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:38:23 - neural_network_search.py - INFO - Get 3 classes problem.
2021-02-22 10:38:23 - neural_network_search.py - INFO - Start to get model instance for algorithms: DNN
2021-02-22 10:38:23 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-02-22 10:38:23 - neural_network_search.py - INFO - Start to search neural network models.
2021-02-22 10:39:46 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:39:47 - neural_network_search.py - INFO - Get 3 classes problem.
2021-02-22 10:39:47 - neural_network_search.py - INFO - Start to get model instance for algorithms: DNN
2021-02-22 10:39:47 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-02-22 10:39:47 - neural_network_search.py - INFO - Start to search neural network models.
2021-02-22 10:40:50 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:40:51 - neural_network_search.py - INFO - Get 3 classes problem.
2021-02-22 10:40:51 - neural_network_search.py - INFO - Start to get model instance for algorithms: DNN
2021-02-22 10:40:51 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-02-22 10:40:51 - neural_network_search.py - INFO - Start to search neural network models.
2021-02-22 10:41:48 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:41:49 - neural_network_search.py - INFO - Get 3 classes problem.
2021-02-22 10:41:49 - neural_network_search.py - INFO - Start to get model instance for algorithms: DNN
2021-02-22 10:41:49 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-02-22 10:41:49 - neural_network_search.py - INFO - Start to search neural network models.
2021-02-22 10:41:51 - neural_network_search.py - INFO - Get best scores are: 0.3	0.7	0.3	0.3	0.166667
2021-02-22 10:41:51 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-02-22 10:41:51 - neural_network_search.py - INFO - Whole fitting logic finished used 1.9029295444488525 seconds.
2021-02-22 10:43:56 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:43:57 - neural_network_search.py - INFO - Get 3 classes problem.
2021-02-22 10:43:57 - neural_network_search.py - INFO - Start to get model instance for algorithms: DNN
2021-02-22 10:43:57 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-02-22 10:43:57 - neural_network_search.py - INFO - Start to search neural network models.
2021-02-22 10:43:58 - neural_network_search.py - INFO - Get best scores are: 0.2	0.633333	0.166667	0.2	0.033333
2021-02-22 10:43:58 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-02-22 10:43:59 - neural_network_search.py - INFO - Whole fitting logic finished used 1.6805219650268555 seconds.
2021-02-22 10:45:39 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:45:40 - neural_network_search.py - INFO - Get 3 classes problem.
2021-02-22 10:45:40 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-02-22 10:45:40 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-02-22 10:45:40 - neural_network_search.py - INFO - Start to search neural network models.
2021-02-22 10:45:42 - neural_network_search.py - INFO - Get best scores are: [0.333333	0.733333	0.3	0.333333	0.1]
2021-02-22 10:45:42 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-02-22 10:45:43 - neural_network_search.py - INFO - Whole fitting logic finished used 2.1492607593536377 seconds.
2021-02-22 10:50:00 - logger - INFO - Start logging for `logger`
2021-02-22 10:50:00 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-02-22 10:50:00 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-02-22 10:50:12 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:50:12 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-02-22 10:50:12 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-02-22 10:50:12 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-02-22 10:50:12 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-02-22 10:50:12 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-02-22 10:50:12 - pipeline_training.py - INFO - Start to transform training data.
2021-02-22 10:50:12 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-02-22 10:50:12 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-02-22 10:50:12 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-02-22 10:50:12 - pipeline_training.py - INFO - After processing, data shape: 17
2021-02-22 10:50:12 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-02-22 10:50:12 - model_selection.py - INFO - Start to train model based on whole cores.
2021-02-22 10:50:29 - model_selection.py - INFO - Model selection training has finished.
2021-02-22 10:50:29 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-02-22 10:50:29 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.795046
2021-02-22 10:50:29 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.779504
2021-02-22 10:50:29 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.796385
2021-02-22 10:50:29 - model_selection.py - INFO - Start to save best selected models into disk.
2021-02-22 10:50:29 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.796385
2021-02-22 10:50:29 - model_selection.py - INFO - Start to save model: LogisticRegression-0.795046
2021-02-22 10:50:29 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.779504
2021-02-22 10:50:29 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.796385.pkl	LogisticRegression-0.795046.pkl	SupportVectorMachine-0.779504.pkl
2021-02-22 10:50:29 - pipeline_training.py - INFO - Training pipeline finished takes: 17 seconds.
2021-02-22 10:50:29 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-02-22 10:50:29 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-02-22 10:50:29 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-02-22 10:50:29 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-02-22 10:50:29 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-02-22 10:50:29 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-02-22 10:50:30 - model_ensemble.py - INFO - Stacking model score: 0.818182
2021-02-22 10:50:30 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-02-22 10:50:30 - pipeline_training.py - INFO - End Model Pipeline training.
2021-02-22 10:50:30 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-02-22 10:50:30 - neural_network_search.py - INFO - Get 2 classes problem.
2021-02-22 10:50:30 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-02-22 10:50:30 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-02-22 10:50:31 - neural_network_search.py - INFO - Start to search neural network models.
2021-02-22 10:57:24 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:57:25 - neural_network_search.py - INFO - Get 3 classes problem.
2021-02-22 10:57:25 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-02-22 10:57:25 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-02-22 10:57:25 - neural_network_search.py - INFO - Start to search neural network models.
2021-02-22 10:58:08 - logger - INFO - Start logging for `logger`
2021-02-22 10:58:08 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-02-22 10:58:08 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-02-22 10:58:18 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-22 10:58:18 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-02-22 10:58:18 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-02-22 10:58:18 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-02-22 10:58:18 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-02-22 10:58:18 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-02-22 10:58:18 - pipeline_training.py - INFO - Start to transform training data.
2021-02-22 10:58:18 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-02-22 10:58:18 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-02-22 10:58:18 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-02-22 10:58:18 - pipeline_training.py - INFO - After processing, data shape: 16
2021-02-22 10:58:18 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-02-22 10:58:18 - model_selection.py - INFO - Start to train model based on whole cores.
2021-02-22 10:58:35 - model_selection.py - INFO - Model selection training has finished.
2021-02-22 10:58:35 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-02-22 10:58:35 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.776578
2021-02-22 10:58:35 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.782271
2021-02-22 10:58:35 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.787866
2021-02-22 10:58:35 - model_selection.py - INFO - Start to save best selected models into disk.
2021-02-22 10:58:35 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.787866
2021-02-22 10:58:35 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.782271
2021-02-22 10:58:35 - model_selection.py - INFO - Start to save model: LogisticRegression-0.776578
2021-02-22 10:58:35 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.787866.pkl	LogisticRegression-0.776578.pkl	SupportVectorMachine-0.782271.pkl
2021-02-22 10:58:35 - pipeline_training.py - INFO - Training pipeline finished takes: 17 seconds.
2021-02-22 10:58:35 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-02-22 10:58:35 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-02-22 10:58:35 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-02-22 10:58:35 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-02-22 10:58:35 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-02-22 10:58:35 - model_ensemble.py - INFO - Before stacking we have data dimention: 16, after stacking we have :19
2021-02-22 10:58:36 - model_ensemble.py - INFO - Stacking model score: 0.776224
2021-02-22 10:58:36 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-02-22 10:58:36 - pipeline_training.py - INFO - End Model Pipeline training.
2021-02-22 10:58:36 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-02-22 10:58:36 - neural_network_search.py - INFO - Get 2 classes problem.
2021-02-22 10:58:36 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-02-22 10:58:36 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-02-22 10:58:37 - neural_network_search.py - INFO - Start to search neural network models.
2021-02-22 10:59:13 - neural_network_search.py - INFO - Get best scores are: [0.797203	0.762238	0.734266	0.727273	0.692308]
2021-02-22 10:59:13 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-02-22 10:59:14 - neural_network_search.py - INFO - Whole fitting logic finished used 36.41487693786621 seconds.
2021-02-22 10:59:14 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-02-22 10:59:14 - pipeline_training.py - INFO - Start to get model score for model: <auto_ml.base.model_selection.GridSearchModel object at 0x0000015D40E77358>.
2021-02-22 10:59:14 - pipeline_training.py - INFO - Model: <auto_ml.base.model_selection.GridSearchModel object at 0x0000015D40E77358> get score: 0.7821.
2021-02-22 10:59:14 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.787866.pkl	LogisticRegression-0.776578.pkl	Stacking-0.776224.pkl	SupportVectorMachine-0.782271.pkl
2021-02-22 10:59:14 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.5420625746289837).
2021-02-22 10:59:14 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.5420625746289837) get score: 0.7821.
2021-02-22 10:59:14 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=0.9840158976426796).
2021-02-22 10:59:14 - pipeline_training.py - INFO - Model: LogisticRegression(C=0.9840158976426796) get score: 0.8212.
2021-02-22 10:59:14 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-02-22 10:59:14 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-02-22 10:59:14 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-02-22 10:59:14 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-02-22 10:59:14 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-02-22 10:59:14 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-02-22 10:59:14 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.7821.
2021-02-22 10:59:14 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=4.754444493870162).
2021-02-22 10:59:14 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=4.754444493870162) get score: 0.8101.
