2021-03-03 09:05:44 - logger - INFO - Start logging for `logger`
2021-03-03 09:05:44 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 09:05:45 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 09:05:45 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 09:05:45 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 09:05:45 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 09:06:53 - logger - INFO - Start logging for `logger`
2021-03-03 09:06:53 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 09:06:53 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 09:06:53 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 09:06:53 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 09:06:53 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 09:08:37 - logger - INFO - Start logging for `logger`
2021-03-03 09:08:37 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 09:08:37 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 09:08:38 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 09:08:38 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 09:08:38 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 09:09:56 - logger - INFO - Start logging for `logger`
2021-03-03 09:09:56 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 09:09:57 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 09:09:57 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 09:09:57 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 09:09:57 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 09:12:13 - logger - INFO - Start logging for `logger`
2021-03-03 09:12:13 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 09:12:13 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 09:12:13 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 09:12:13 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 09:12:13 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 09:12:24 - automl.py - ERROR - Error downloading file with service account: buoyant-sum-302208-4542dcd74629.json
2021-03-03 09:16:30 - logger - INFO - Start logging for `logger`
2021-03-03 09:16:30 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 09:16:30 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 09:16:30 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 09:16:30 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 09:16:30 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 09:18:05 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-03 09:18:05 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-03 09:18:05 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-03 09:18:05 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-03 09:18:05 - pipeline_training.py - INFO - Start to transform training data.
2021-03-03 09:18:05 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-03 09:18:05 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-03 09:18:05 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-03 09:18:05 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-03 09:18:05 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-03 09:18:05 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-03 09:18:26 - model_selection.py - INFO - Model selection training has finished.
2021-03-03 09:18:26 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-03 09:18:26 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.794627
2021-03-03 09:18:26 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.777798
2021-03-03 09:18:26 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.789021
2021-03-03 09:18:26 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-03 09:18:26 - model_selection.py - INFO - Start to save model: LogisticRegression-0.794627
2021-03-03 09:18:26 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.789021
2021-03-03 09:18:26 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.777798
2021-03-03 09:18:26 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.789021.pkl	LogisticRegression-0.794627.pkl	SupportVectorMachine-0.777798.pkl
2021-03-03 09:18:26 - pipeline_training.py - INFO - Training pipeline finished takes: 21 seconds.
2021-03-03 09:18:26 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-03 09:18:26 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 09:18:26 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 09:18:26 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 09:18:26 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 09:18:26 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-03 09:18:27 - model_ensemble.py - INFO - Stacking model score: 0.804469
2021-03-03 09:18:27 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-03 09:18:27 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-03 09:18:27 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-03 09:18:27 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-03 09:18:27 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-03 09:18:27 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-03 09:18:27 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-03 09:18:35 - neural_network_search.py - INFO - Get best scores are: [0.625698]
2021-03-03 09:18:35 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-03 09:18:35 - neural_network_search.py - INFO - Try to clean serach model space folder: jYchqYXdmY
2021-03-03 09:18:35 - neural_network_search.py - INFO - Folder: jYchqYXdmY has been deleted!
2021-03-03 09:18:35 - neural_network_search.py - INFO - Whole fitting logic finished used 7.871938705444336 seconds.
2021-03-03 09:18:35 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-03 09:18:35 - automl.py - WARNING - No need to validation!
2021-03-03 09:24:09 - logger - INFO - Start logging for `logger`
2021-03-03 09:24:09 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 09:24:09 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 09:24:09 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 09:24:10 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 09:24:10 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 09:24:10 - automl.py - INFO - Start to download file from GCS.
2021-03-03 09:24:16 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 09:24:16 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 09:24:17 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-03 09:24:17 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-03 09:24:17 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-03 09:24:17 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-03 09:24:17 - pipeline_training.py - INFO - Start to transform training data.
2021-03-03 09:24:17 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-03 09:24:17 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-03 09:24:17 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-03 09:24:17 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-03 09:24:17 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-03 09:24:17 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-03 09:24:38 - model_selection.py - INFO - Model selection training has finished.
2021-03-03 09:24:38 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-03 09:24:38 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.795738
2021-03-03 09:24:38 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.778922
2021-03-03 09:24:38 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.785682
2021-03-03 09:24:38 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-03 09:24:38 - model_selection.py - INFO - Start to save model: LogisticRegression-0.795738
2021-03-03 09:24:38 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.785682
2021-03-03 09:24:38 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.778922
2021-03-03 09:24:38 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.785682.pkl	LogisticRegression-0.795738.pkl	SupportVectorMachine-0.778922.pkl
2021-03-03 09:24:38 - pipeline_training.py - INFO - Training pipeline finished takes: 21 seconds.
2021-03-03 09:24:38 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-03 09:24:38 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 09:24:38 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 09:24:38 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 09:24:38 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 09:24:38 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-03 09:24:40 - model_ensemble.py - INFO - Stacking model score: 0.787709
2021-03-03 09:24:40 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-03 09:24:40 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-03 09:24:40 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-03 09:24:40 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-03 09:24:40 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-03 09:24:40 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-03 09:24:40 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-03 09:24:47 - neural_network_search.py - INFO - Get best scores are: [0.698324]
2021-03-03 09:24:47 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-03 09:24:47 - neural_network_search.py - INFO - Try to clean serach model space folder: ukRUSQVvsA
2021-03-03 09:24:47 - neural_network_search.py - INFO - Folder: ukRUSQVvsA has been deleted!
2021-03-03 09:24:47 - neural_network_search.py - INFO - Whole fitting logic finished used 7.149869918823242 seconds.
2021-03-03 09:24:47 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-03 09:24:47 - automl.py - WARNING - No need to validation!
2021-03-03 10:18:59 - logger - INFO - Start logging for `logger`
2021-03-03 10:18:59 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 10:19:00 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 10:19:00 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 10:19:00 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 10:19:00 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 10:19:00 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:19:03 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 10:19:03 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:20:32 - logger - INFO - Start logging for `logger`
2021-03-03 10:20:32 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 10:20:32 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 10:20:33 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 10:20:33 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 10:20:33 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 10:20:33 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:20:36 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 10:20:36 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:20:37 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-03 10:20:37 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-03 10:20:37 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-03 10:20:37 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-03 10:20:37 - pipeline_training.py - INFO - Start to transform training data.
2021-03-03 10:20:37 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-03 10:20:37 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-03 10:20:37 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-03 10:20:37 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-03 10:20:37 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-03 10:20:37 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-03 10:20:58 - model_selection.py - INFO - Model selection training has finished.
2021-03-03 10:20:58 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-03 10:20:58 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.794627
2021-03-03 10:20:58 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.778922
2021-03-03 10:20:58 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.797998
2021-03-03 10:20:58 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-03 10:20:58 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.797998
2021-03-03 10:20:58 - model_selection.py - INFO - Start to save model: LogisticRegression-0.794627
2021-03-03 10:20:58 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.778922
2021-03-03 10:20:58 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.797998.pkl	LogisticRegression-0.794627.pkl	SupportVectorMachine-0.778922.pkl
2021-03-03 10:20:58 - pipeline_training.py - INFO - Training pipeline finished takes: 21 seconds.
2021-03-03 10:20:58 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-03 10:20:58 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 10:20:58 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 10:20:58 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 10:20:58 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 10:20:58 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-03 10:20:59 - model_ensemble.py - INFO - Stacking model score: 0.804469
2021-03-03 10:20:59 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-03 10:20:59 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-03 10:20:59 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-03 10:20:59 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-03 10:20:59 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-03 10:20:59 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-03 10:20:59 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-03 10:21:06 - neural_network_search.py - INFO - Get best scores are: [0.636872]
2021-03-03 10:21:06 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-03 10:21:07 - neural_network_search.py - INFO - Try to clean serach model space folder: gGioYkoHfX
2021-03-03 10:21:07 - neural_network_search.py - INFO - Folder: gGioYkoHfX has been deleted!
2021-03-03 10:21:07 - neural_network_search.py - INFO - Whole fitting logic finished used 7.171833276748657 seconds.
2021-03-03 10:21:07 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-03 10:21:07 - automl.py - WARNING - No need to validation!
2021-03-03 10:21:07 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:21:09 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 10:21:09 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:23:01 - logger - INFO - Start logging for `logger`
2021-03-03 10:23:02 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 10:23:02 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 10:23:02 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 10:23:02 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 10:23:02 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 10:23:02 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:23:05 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 10:23:05 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:23:06 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-03 10:23:06 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-03 10:23:06 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-03 10:23:06 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-03 10:23:06 - pipeline_training.py - INFO - Start to transform training data.
2021-03-03 10:23:06 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-03 10:23:06 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-03 10:23:06 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-03 10:23:06 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-03 10:23:06 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-03 10:23:06 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-03 10:23:26 - model_selection.py - INFO - Model selection training has finished.
2021-03-03 10:23:26 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-03 10:23:26 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.794627
2021-03-03 10:23:26 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.780039
2021-03-03 10:23:26 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.792398
2021-03-03 10:23:26 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-03 10:23:26 - model_selection.py - INFO - Start to save model: LogisticRegression-0.794627
2021-03-03 10:23:26 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.792398
2021-03-03 10:23:26 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.780039
2021-03-03 10:23:26 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.792398.pkl	LogisticRegression-0.794627.pkl	SupportVectorMachine-0.780039.pkl
2021-03-03 10:23:26 - pipeline_training.py - INFO - Training pipeline finished takes: 20 seconds.
2021-03-03 10:23:26 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-03 10:23:26 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 10:23:26 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 10:23:26 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 10:23:26 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 10:23:26 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-03 10:23:28 - model_ensemble.py - INFO - Stacking model score: 0.804469
2021-03-03 10:23:28 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-03 10:23:28 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-03 10:23:28 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-03 10:23:28 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-03 10:23:28 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-03 10:23:28 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-03 10:23:28 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-03 10:23:35 - neural_network_search.py - INFO - Get best scores are: [0.614525]
2021-03-03 10:23:35 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-03 10:23:35 - neural_network_search.py - INFO - Try to clean serach model space folder: crxRsMQOPM
2021-03-03 10:23:35 - neural_network_search.py - INFO - Folder: crxRsMQOPM has been deleted!
2021-03-03 10:23:35 - neural_network_search.py - INFO - Whole fitting logic finished used 7.289509057998657 seconds.
2021-03-03 10:23:35 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-03 10:23:35 - automl.py - WARNING - No need to validation!
2021-03-03 10:23:35 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:23:38 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 10:23:38 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:23:38 - automl.py - INFO - Start to get prediction based on best trained model!
2021-03-03 10:38:13 - logger - INFO - Start logging for `logger`
2021-03-03 10:38:14 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 10:38:14 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 10:38:14 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 10:38:14 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 10:38:14 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 10:38:14 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:38:17 - automl.py - ERROR - Error downloading file with service account: buoyant-sum-302208-4542dcd74629.json
2021-03-03 10:38:43 - logger - INFO - Start logging for `logger`
2021-03-03 10:38:43 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 10:38:43 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 10:38:43 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 10:38:43 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 10:38:43 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 10:38:43 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:38:45 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 10:38:45 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:38:46 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-03 10:38:46 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-03 10:38:46 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-03 10:38:46 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-03 10:38:46 - pipeline_training.py - INFO - Start to transform training data.
2021-03-03 10:38:46 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-03 10:38:46 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-03 10:38:46 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-03 10:38:46 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-03 10:38:46 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-03 10:38:46 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-03 10:39:08 - model_selection.py - INFO - Model selection training has finished.
2021-03-03 10:39:08 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-03 10:39:08 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.794627
2021-03-03 10:39:08 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.778922
2021-03-03 10:39:08 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.794652
2021-03-03 10:39:08 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-03 10:39:08 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.794652
2021-03-03 10:39:08 - model_selection.py - INFO - Start to save model: LogisticRegression-0.794627
2021-03-03 10:39:08 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.778922
2021-03-03 10:39:08 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.794652.pkl	LogisticRegression-0.794627.pkl	SupportVectorMachine-0.778922.pkl
2021-03-03 10:39:08 - pipeline_training.py - INFO - Training pipeline finished takes: 22 seconds.
2021-03-03 10:39:08 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-03 10:39:08 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 10:39:08 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 10:39:08 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 10:39:08 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 10:39:08 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-03 10:39:09 - model_ensemble.py - INFO - Stacking model score: 0.787709
2021-03-03 10:39:09 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 2 seconds.
2021-03-03 10:39:09 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-03 10:39:09 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-03 10:39:09 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-03 10:39:09 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-03 10:39:09 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-03 10:39:10 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-03 10:39:19 - neural_network_search.py - INFO - Get best scores are: [0.530726]
2021-03-03 10:39:19 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-03 10:39:19 - neural_network_search.py - INFO - Try to clean serach model space folder: PBJDJSxsYg
2021-03-03 10:39:19 - neural_network_search.py - INFO - Folder: PBJDJSxsYg has been deleted!
2021-03-03 10:39:19 - neural_network_search.py - INFO - Whole fitting logic finished used 9.590664386749268 seconds.
2021-03-03 10:39:19 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-03 10:39:19 - automl.py - WARNING - No need to validation!
2021-03-03 10:39:19 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:39:23 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 10:39:23 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:39:23 - automl.py - INFO - Start to get prediction based on best trained model!
2021-03-03 10:45:22 - logger - INFO - Start logging for `logger`
2021-03-03 10:45:22 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 10:45:23 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 10:45:23 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 10:45:23 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 10:45:23 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 10:45:23 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:45:25 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 10:45:25 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:45:26 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-03 10:45:26 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-03 10:45:26 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-03 10:45:26 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-03 10:45:26 - pipeline_training.py - INFO - Start to transform training data.
2021-03-03 10:45:26 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-03 10:45:26 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-03 10:45:26 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-03 10:45:26 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-03 10:45:26 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-03 10:45:26 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-03 10:45:46 - model_selection.py - INFO - Model selection training has finished.
2021-03-03 10:45:46 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-03 10:45:46 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.794627
2021-03-03 10:45:46 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.794614
2021-03-03 10:45:46 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.789047
2021-03-03 10:45:46 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-03 10:45:46 - model_selection.py - INFO - Start to save model: LogisticRegression-0.794627
2021-03-03 10:45:46 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.794614
2021-03-03 10:45:46 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.789047
2021-03-03 10:45:46 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.789047.pkl	LogisticRegression-0.794627.pkl	SupportVectorMachine-0.794614.pkl
2021-03-03 10:45:46 - pipeline_training.py - INFO - Training pipeline finished takes: 20 seconds.
2021-03-03 10:45:46 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-03 10:45:46 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 10:45:46 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 10:45:46 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 10:45:46 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 10:45:46 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-03 10:45:47 - model_ensemble.py - INFO - Stacking model score: 0.776536
2021-03-03 10:45:47 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-03 10:45:47 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-03 10:45:47 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-03 10:45:47 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-03 10:45:47 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-03 10:45:47 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-03 10:45:47 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-03 10:45:54 - neural_network_search.py - INFO - Get best scores are: [0.452514]
2021-03-03 10:45:54 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-03 10:45:54 - neural_network_search.py - INFO - Try to clean serach model space folder: mTqkCDBvnI
2021-03-03 10:45:54 - neural_network_search.py - INFO - Folder: mTqkCDBvnI has been deleted!
2021-03-03 10:45:54 - neural_network_search.py - INFO - Whole fitting logic finished used 6.933534383773804 seconds.
2021-03-03 10:45:54 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-03 10:45:54 - automl.py - WARNING - No need to validation!
2021-03-03 10:45:54 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:45:56 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 10:45:56 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:45:56 - automl.py - INFO - Need to delete columns:Survived  from original DataFrame.
2021-03-03 10:45:56 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-03 10:45:56 - automl.py - INFO - Prediction step finishes.
2021-03-03 10:45:56 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-03 10:45:56 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-03 10:45:56 - automl.py - INFO - Prediction step finishes.
2021-03-03 10:47:34 - logger - INFO - Start logging for `logger`
2021-03-03 10:47:34 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 10:47:34 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 10:47:34 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 10:47:34 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 10:47:34 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 10:47:34 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:47:37 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 10:47:37 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:47:38 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-03 10:47:38 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-03 10:47:38 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-03 10:47:38 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-03 10:47:38 - pipeline_training.py - INFO - Start to transform training data.
2021-03-03 10:47:38 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-03 10:47:38 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-03 10:47:38 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-03 10:47:38 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-03 10:47:38 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-03 10:47:38 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-03 10:48:00 - model_selection.py - INFO - Model selection training has finished.
2021-03-03 10:48:00 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-03 10:48:00 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.794627
2021-03-03 10:48:00 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.778922
2021-03-03 10:48:00 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.790145
2021-03-03 10:48:00 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-03 10:48:00 - model_selection.py - INFO - Start to save model: LogisticRegression-0.794627
2021-03-03 10:48:00 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.790145
2021-03-03 10:48:00 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.778922
2021-03-03 10:48:00 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.790145.pkl	LogisticRegression-0.794627.pkl	SupportVectorMachine-0.778922.pkl
2021-03-03 10:48:00 - pipeline_training.py - INFO - Training pipeline finished takes: 22 seconds.
2021-03-03 10:48:00 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-03 10:48:00 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 10:48:01 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 10:48:01 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 10:48:01 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 10:48:01 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-03 10:48:02 - model_ensemble.py - INFO - Stacking model score: 0.793296
2021-03-03 10:48:02 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 2 seconds.
2021-03-03 10:48:02 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-03 10:48:02 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-03 10:48:02 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-03 10:48:02 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-03 10:48:02 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-03 10:48:03 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-03 10:48:11 - neural_network_search.py - INFO - Get best scores are: [0.698324]
2021-03-03 10:48:11 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-03 10:48:11 - neural_network_search.py - INFO - Try to clean serach model space folder: egrBXItOIs
2021-03-03 10:48:11 - neural_network_search.py - INFO - Folder: egrBXItOIs has been deleted!
2021-03-03 10:48:11 - neural_network_search.py - INFO - Whole fitting logic finished used 8.510274648666382 seconds.
2021-03-03 10:48:11 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-03 10:48:11 - automl.py - WARNING - No need to validation!
2021-03-03 10:48:11 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:48:13 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 10:48:13 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:48:13 - automl.py - INFO - Need to delete columns:Survived  from original DataFrame.
2021-03-03 10:48:13 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-03 10:48:13 - automl.py - INFO - Prediction step finishes.
2021-03-03 10:48:13 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-03 10:48:13 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-03 10:48:13 - automl.py - INFO - Prediction step finishes.
2021-03-03 10:48:14 - automl.py - INFO - Start to get prediction based on best trained model!
2021-03-03 10:48:14 - pipeline_training.py - INFO - Start to get model score for model: <auto_ml.base.model_selection.GridSearchModel object at 0x00000253FA1000B8>.
2021-03-03 10:48:14 - pipeline_training.py - INFO - Model: <auto_ml.base.model_selection.GridSearchModel object at 0x00000253FA1000B8> get score: 0.8036.
2021-03-03 10:48:14 - automl.py - INFO - Get score: 0.8035914702581369 based on best model!
2021-03-03 10:49:36 - logger - INFO - Start logging for `logger`
2021-03-03 10:49:36 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 10:49:37 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 10:49:37 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 10:49:37 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 10:49:37 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 10:49:37 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:49:39 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 10:49:39 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:49:40 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-03 10:49:40 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-03 10:49:40 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-03 10:49:40 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-03 10:49:40 - pipeline_training.py - INFO - Start to transform training data.
2021-03-03 10:49:40 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-03 10:49:40 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-03 10:49:40 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-03 10:49:40 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-03 10:49:40 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-03 10:49:40 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-03 10:50:01 - model_selection.py - INFO - Model selection training has finished.
2021-03-03 10:50:01 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-03 10:50:01 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.795738
2021-03-03 10:50:01 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.782286
2021-03-03 10:50:01 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.796874
2021-03-03 10:50:01 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-03 10:50:01 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.796874
2021-03-03 10:50:01 - model_selection.py - INFO - Start to save model: LogisticRegression-0.795738
2021-03-03 10:50:01 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.782286
2021-03-03 10:50:01 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.796874.pkl	LogisticRegression-0.795738.pkl	SupportVectorMachine-0.782286.pkl
2021-03-03 10:50:01 - pipeline_training.py - INFO - Training pipeline finished takes: 21 seconds.
2021-03-03 10:50:01 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-03 10:50:01 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 10:50:01 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 10:50:01 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 10:50:01 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 10:50:01 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-03 10:50:02 - model_ensemble.py - INFO - Stacking model score: 0.804469
2021-03-03 10:50:02 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-03 10:50:02 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-03 10:50:02 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-03 10:50:02 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-03 10:50:02 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-03 10:50:02 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-03 10:50:02 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-03 10:50:10 - neural_network_search.py - INFO - Get best scores are: [0.424581]
2021-03-03 10:50:10 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-03 10:50:10 - neural_network_search.py - INFO - Try to clean serach model space folder: fLXUaUlJyX
2021-03-03 10:50:10 - neural_network_search.py - INFO - Folder: fLXUaUlJyX has been deleted!
2021-03-03 10:50:10 - neural_network_search.py - INFO - Whole fitting logic finished used 7.7154459953308105 seconds.
2021-03-03 10:50:10 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-03 10:50:10 - automl.py - WARNING - No need to validation!
2021-03-03 10:50:10 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:50:12 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 10:50:12 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:50:12 - automl.py - INFO - Need to delete columns:Survived  from original DataFrame.
2021-03-03 10:50:12 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-03 10:50:12 - automl.py - INFO - Prediction step finishes.
2021-03-03 10:50:12 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-03 10:50:12 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-03 10:50:12 - automl.py - INFO - Prediction step finishes.
2021-03-03 10:50:12 - automl.py - INFO - Start to get prediction based on best trained model!
2021-03-03 10:50:12 - pipeline_training.py - INFO - Start to get model score for model: <auto_ml.base.model_selection.GridSearchModel object at 0x0000027A48796A90>.
2021-03-03 10:50:12 - pipeline_training.py - INFO - Model: <auto_ml.base.model_selection.GridSearchModel object at 0x0000027A48796A90> get score: 0.8373.
2021-03-03 10:50:12 - automl.py - INFO - Get score: 0.8372615039281706 based on best model!
2021-03-03 10:50:13 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.796874.pkl	LogisticRegression-0.795738.pkl	Stacking-0.804469.pkl	SupportVectorMachine-0.782286.pkl	DNN-0.424581.h5
2021-03-03 10:50:13 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.962439672040277, n_estimators=300).
2021-03-03 10:50:13 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.962439672040277, n_estimators=300) get score: 0.8373.
2021-03-03 10:50:13 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=0.12084846885820866).
2021-03-03 10:50:13 - pipeline_training.py - INFO - Model: LogisticRegression(C=0.12084846885820866) get score: 0.8002.
2021-03-03 10:50:13 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-03-03 10:50:13 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-03-03 10:50:13 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 10:50:13 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 10:50:13 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 10:50:13 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 10:50:13 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.8373.
2021-03-03 10:50:13 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=1.701541359316141).
2021-03-03 10:50:13 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=1.701541359316141) get score: 0.8260.
2021-03-03 10:50:13 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000027A4AABF550>.
2021-03-03 10:50:13 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000027A4AABF550> get score: 0.4029.
2021-03-03 10:52:32 - logger - INFO - Start logging for `logger`
2021-03-03 10:52:33 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 10:52:33 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 10:52:33 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 10:52:33 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 10:52:33 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 10:52:33 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:52:35 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 10:52:35 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:52:36 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-03 10:52:36 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-03 10:52:36 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-03 10:52:36 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-03 10:52:36 - pipeline_training.py - INFO - Start to transform training data.
2021-03-03 10:52:36 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-03 10:52:36 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-03 10:52:36 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-03 10:52:36 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-03 10:52:36 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-03 10:52:36 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-03 10:52:59 - model_selection.py - INFO - Model selection training has finished.
2021-03-03 10:52:59 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-03 10:52:59 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.794627
2021-03-03 10:52:59 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.777798
2021-03-03 10:52:59 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.785688
2021-03-03 10:52:59 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-03 10:52:59 - model_selection.py - INFO - Start to save model: LogisticRegression-0.794627
2021-03-03 10:52:59 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.785688
2021-03-03 10:52:59 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.777798
2021-03-03 10:52:59 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.785688.pkl	LogisticRegression-0.794627.pkl	SupportVectorMachine-0.777798.pkl
2021-03-03 10:52:59 - pipeline_training.py - INFO - Training pipeline finished takes: 23 seconds.
2021-03-03 10:52:59 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-03 10:52:59 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 10:52:59 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 10:52:59 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 10:52:59 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 10:52:59 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-03 10:53:00 - model_ensemble.py - INFO - Stacking model score: 0.793296
2021-03-03 10:53:00 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-03 10:53:00 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-03 10:53:00 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-03 10:53:00 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-03 10:53:00 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-03 10:53:00 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-03 10:53:00 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-03 10:53:07 - neural_network_search.py - INFO - Get best scores are: [0.441341]
2021-03-03 10:53:07 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-03 10:53:07 - neural_network_search.py - INFO - Try to clean serach model space folder: JeKsZwUfNX
2021-03-03 10:53:07 - neural_network_search.py - INFO - Folder: JeKsZwUfNX has been deleted!
2021-03-03 10:53:07 - neural_network_search.py - INFO - Whole fitting logic finished used 6.898559093475342 seconds.
2021-03-03 10:53:07 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-03 10:53:07 - automl.py - WARNING - No need to validation!
2021-03-03 10:53:07 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:53:09 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 10:53:09 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:53:09 - automl.py - INFO - Need to delete columns:Survived  from original DataFrame.
2021-03-03 10:53:09 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-03 10:53:09 - automl.py - INFO - Prediction step finishes.
2021-03-03 10:53:09 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-03 10:53:09 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-03 10:53:09 - automl.py - INFO - Prediction step finishes.
2021-03-03 10:53:09 - automl.py - INFO - Start to get prediction based on best trained model!
2021-03-03 10:53:09 - pipeline_training.py - INFO - Start to get model score for model: <auto_ml.base.model_selection.GridSearchModel object at 0x000001EC83D4FD30>.
2021-03-03 10:53:09 - pipeline_training.py - INFO - Model: <auto_ml.base.model_selection.GridSearchModel object at 0x000001EC83D4FD30> get score: 0.8036.
2021-03-03 10:53:09 - automl.py - INFO - Get score: 0.8035914702581369 based on best model!
2021-03-03 10:53:09 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.785688.pkl	LogisticRegression-0.794627.pkl	Stacking-0.793296.pkl	SupportVectorMachine-0.777798.pkl	DNN-0.441341.h5
2021-03-03 10:53:09 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.8511373696556532).
2021-03-03 10:53:09 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.8511373696556532) get score: 0.8373.
2021-03-03 10:53:09 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=1).
2021-03-03 10:53:09 - pipeline_training.py - INFO - Model: LogisticRegression(C=1) get score: 0.8036.
2021-03-03 10:53:09 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-03-03 10:53:09 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-03-03 10:53:09 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 10:53:09 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 10:53:09 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 10:53:09 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 10:53:09 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.8373.
2021-03-03 10:53:09 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=8.729570581800846).
2021-03-03 10:53:09 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=8.729570581800846) get score: 0.8361.
2021-03-03 10:53:09 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000001EC84DCEC18>.
2021-03-03 10:53:09 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000001EC84DCEC18> get score: 0.4411.
2021-03-03 10:56:05 - logger - INFO - Start logging for `logger`
2021-03-03 10:56:05 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 10:56:06 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 10:56:06 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 10:56:06 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 10:56:06 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 10:56:06 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:56:08 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 10:56:08 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:56:09 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-03 10:56:09 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-03 10:56:09 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-03 10:56:09 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-03 10:56:09 - pipeline_training.py - INFO - Start to transform training data.
2021-03-03 10:56:09 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-03 10:56:09 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-03 10:56:09 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-03 10:56:09 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-03 10:56:09 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-03 10:56:09 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-03 10:56:30 - model_selection.py - INFO - Model selection training has finished.
2021-03-03 10:56:30 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-03 10:56:30 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.794627
2021-03-03 10:56:30 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.777798
2021-03-03 10:56:30 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.793516
2021-03-03 10:56:30 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-03 10:56:30 - model_selection.py - INFO - Start to save model: LogisticRegression-0.794627
2021-03-03 10:56:30 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.793516
2021-03-03 10:56:30 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.777798
2021-03-03 10:56:30 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.793516.pkl	LogisticRegression-0.794627.pkl	SupportVectorMachine-0.777798.pkl
2021-03-03 10:56:30 - pipeline_training.py - INFO - Training pipeline finished takes: 21 seconds.
2021-03-03 10:56:30 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-03 10:56:31 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 10:56:31 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 10:56:31 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 10:56:31 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 10:56:31 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-03 10:56:32 - model_ensemble.py - INFO - Stacking model score: 0.804469
2021-03-03 10:56:32 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 2 seconds.
2021-03-03 10:56:32 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-03 10:56:32 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-03 10:56:32 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-03 10:56:32 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-03 10:56:32 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-03 10:56:32 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-03 10:56:41 - neural_network_search.py - INFO - Get best scores are: [0.614525]
2021-03-03 10:56:41 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-03 10:56:41 - neural_network_search.py - INFO - Try to clean serach model space folder: ApCydooFGK
2021-03-03 10:56:41 - neural_network_search.py - INFO - Folder: ApCydooFGK has been deleted!
2021-03-03 10:56:41 - neural_network_search.py - INFO - Whole fitting logic finished used 9.018891096115112 seconds.
2021-03-03 10:56:41 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-03 10:56:42 - automl.py - WARNING - No need to validation!
2021-03-03 10:56:42 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:56:44 - automl.py - INFO - File: test.csv has been downloaded from GCS to local.
2021-03-03 10:56:44 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:56:44 - automl.py - INFO - Need to delete columns:  from original DataFrame.
2021-03-03 10:56:44 - automl.py - INFO - Start to download file from GCS.
2021-03-03 10:56:45 - automl.py - INFO - File: test.csv has been downloaded from GCS to local.
2021-03-03 10:56:45 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 10:56:45 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-03 10:56:45 - automl.py - INFO - Prediction step finishes.
2021-03-03 10:56:45 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-03 10:56:45 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-03 10:56:45 - automl.py - INFO - Prediction step finishes.
2021-03-03 10:56:46 - automl.py - INFO - Start to get prediction based on best trained model!
2021-03-03 10:56:46 - pipeline_training.py - INFO - Start to get model score for model: <auto_ml.base.model_selection.GridSearchModel object at 0x000001D63FD8EA90>.
2021-03-03 10:56:46 - pipeline_training.py - ERROR - When to process data in `ensemble`, get error: Cannot use mean strategy with non-numeric data:
could not convert string to float: 'Kelly, Mr. James'
2021-03-03 10:56:46 - pipeline_training.py - ERROR - When try to use pipeline to get prediction with error: Cannot use mean strategy with non-numeric data:
could not convert string to float: 'Kelly, Mr. James'
2021-03-03 11:03:19 - logger - INFO - Start logging for `logger`
2021-03-03 11:03:19 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 11:03:19 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 11:03:20 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 11:03:20 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 11:03:20 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 11:03:20 - automl.py - INFO - Start to download file:train.csv from GCS.
2021-03-03 11:03:22 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 11:03:22 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 11:03:23 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-03 11:03:23 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-03 11:03:23 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-03 11:03:23 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-03 11:03:23 - pipeline_training.py - INFO - Start to transform training data.
2021-03-03 11:03:23 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-03 11:03:23 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-03 11:03:23 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-03 11:03:23 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-03 11:03:23 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-03 11:03:23 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-03 11:03:44 - model_selection.py - INFO - Model selection training has finished.
2021-03-03 11:03:44 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-03 11:03:44 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.794627
2021-03-03 11:03:44 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.780039
2021-03-03 11:03:44 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.796893
2021-03-03 11:03:44 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-03 11:03:44 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.796893
2021-03-03 11:03:44 - model_selection.py - INFO - Start to save model: LogisticRegression-0.794627
2021-03-03 11:03:44 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.780039
2021-03-03 11:03:44 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.796893.pkl	LogisticRegression-0.794627.pkl	SupportVectorMachine-0.780039.pkl
2021-03-03 11:03:44 - pipeline_training.py - INFO - Training pipeline finished takes: 21 seconds.
2021-03-03 11:03:44 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-03 11:03:44 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 11:03:44 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 11:03:44 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 11:03:44 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 11:03:44 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-03 11:03:45 - model_ensemble.py - INFO - Stacking model score: 0.804469
2021-03-03 11:03:45 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-03 11:03:45 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-03 11:03:45 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-03 11:03:45 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-03 11:03:45 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-03 11:03:45 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-03 11:03:45 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-03 11:03:52 - neural_network_search.py - INFO - Get best scores are: [0.636872]
2021-03-03 11:03:52 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-03 11:03:52 - neural_network_search.py - INFO - Try to clean serach model space folder: MaczMZrbVq
2021-03-03 11:03:52 - neural_network_search.py - INFO - Folder: MaczMZrbVq has been deleted!
2021-03-03 11:03:52 - neural_network_search.py - INFO - Whole fitting logic finished used 6.691102981567383 seconds.
2021-03-03 11:03:52 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-03 11:03:52 - automl.py - WARNING - No need to validation!
2021-03-03 11:03:52 - automl.py - INFO - Start to download file:test.csv from GCS.
2021-03-03 11:03:54 - automl.py - INFO - File: test.csv has been downloaded from GCS to local.
2021-03-03 11:03:54 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 11:03:54 - automl.py - INFO - Need to delete columns:  from original DataFrame.
2021-03-03 11:03:54 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-03 11:03:54 - automl.py - INFO - Prediction step finishes.
2021-03-03 11:03:54 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-03 11:03:54 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-03 11:03:54 - automl.py - INFO - Prediction step finishes.
2021-03-03 18:22:32 - logger - INFO - Start logging for `logger`
2021-03-03 18:22:32 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 18:22:32 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 18:22:33 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 18:22:33 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 18:22:33 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 18:22:33 - automl.py - INFO - Start to download file:train.csv from GCS.
2021-03-03 18:22:36 - automl.py - INFO - File: train.csv has been downloaded from GCS to local.
2021-03-03 18:22:36 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 18:22:36 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-03 18:22:36 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-03 18:22:36 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-03 18:22:36 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-03 18:22:36 - pipeline_training.py - INFO - Start to transform training data.
2021-03-03 18:22:37 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-03 18:22:37 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-03 18:22:37 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-03 18:22:37 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-03 18:22:37 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-03 18:22:37 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-03 18:23:07 - model_selection.py - INFO - Model selection training has finished.
2021-03-03 18:23:07 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-03 18:23:07 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.794627
2021-03-03 18:23:07 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.777798
2021-03-03 18:23:07 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.798016
2021-03-03 18:23:07 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-03 18:23:07 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.798016
2021-03-03 18:23:07 - model_selection.py - INFO - Start to save model: LogisticRegression-0.794627
2021-03-03 18:23:07 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.777798
2021-03-03 18:23:07 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.798016.pkl	LogisticRegression-0.794627.pkl	SupportVectorMachine-0.777798.pkl
2021-03-03 18:23:07 - pipeline_training.py - INFO - Training pipeline finished takes: 30 seconds.
2021-03-03 18:23:07 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-03 18:23:07 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 18:23:07 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 18:23:07 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 18:23:07 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 18:23:07 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-03 18:23:09 - model_ensemble.py - INFO - Stacking model score: 0.787709
2021-03-03 18:23:09 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 2 seconds.
2021-03-03 18:23:09 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-03 18:23:09 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-03 18:23:09 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-03 18:23:09 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-03 18:23:09 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-03 18:23:10 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-03 18:23:18 - neural_network_search.py - INFO - Get best scores are: [0.307263]
2021-03-03 18:23:18 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-03 18:23:18 - neural_network_search.py - INFO - Try to clean serach model space folder: QOuVZUjdYj
2021-03-03 18:23:18 - neural_network_search.py - INFO - Folder: QOuVZUjdYj has been deleted!
2021-03-03 18:23:18 - neural_network_search.py - INFO - Whole fitting logic finished used 8.553566217422485 seconds.
2021-03-03 18:23:18 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-03 18:23:18 - automl.py - WARNING - No need to validation!
2021-03-03 18:23:18 - automl.py - INFO - Start to download file:test.csv from GCS.
2021-03-03 18:23:21 - automl.py - INFO - File: test.csv has been downloaded from GCS to local.
2021-03-03 18:23:21 - automl.py - INFO - Download file from GCS has finished.
2021-03-03 18:23:21 - automl.py - INFO - Need to delete columns:  from original DataFrame.
2021-03-03 18:23:21 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-03 18:23:21 - automl.py - INFO - Prediction step finishes.
2021-03-03 18:23:21 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-03 18:23:21 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-03 18:23:21 - automl.py - INFO - Prediction step finishes.
2021-03-03 18:29:24 - logger - INFO - Start logging for `logger`
2021-03-03 18:29:24 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 18:29:24 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 18:29:24 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 18:29:24 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 18:29:24 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 18:29:25 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-03 18:29:25 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-03 18:29:25 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-03 18:29:25 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-03 18:29:25 - pipeline_training.py - INFO - Start to transform training data.
2021-03-03 18:29:25 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-03 18:29:25 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-03 18:29:25 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-03 18:29:25 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-03 18:29:25 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-03 18:29:25 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-03 18:29:45 - model_selection.py - INFO - Model selection training has finished.
2021-03-03 18:29:45 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-03 18:29:45 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.794627
2021-03-03 18:29:45 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.778922
2021-03-03 18:29:45 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.794627
2021-03-03 18:29:45 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-03 18:29:45 - model_selection.py - INFO - Start to save model: LogisticRegression-0.794627
2021-03-03 18:29:45 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.794627
2021-03-03 18:29:45 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.778922
2021-03-03 18:29:45 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.794627.pkl	LogisticRegression-0.794627.pkl	SupportVectorMachine-0.778922.pkl
2021-03-03 18:29:45 - pipeline_training.py - INFO - Training pipeline finished takes: 20 seconds.
2021-03-03 18:29:45 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-03 18:29:45 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 18:29:45 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 18:29:45 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 18:29:45 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 18:29:45 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-03 18:29:47 - model_ensemble.py - INFO - Stacking model score: 0.804469
2021-03-03 18:29:47 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-03 18:29:47 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-03 18:29:47 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-03 18:29:47 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-03 18:29:47 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-03 18:29:47 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-03 18:29:47 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-03 18:29:54 - neural_network_search.py - INFO - Get best scores are: [0.530726]
2021-03-03 18:29:54 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-03 18:29:54 - neural_network_search.py - INFO - Try to clean serach model space folder: cIVNLtevHC
2021-03-03 18:29:54 - neural_network_search.py - INFO - Folder: cIVNLtevHC has been deleted!
2021-03-03 18:29:54 - neural_network_search.py - INFO - Whole fitting logic finished used 7.2516138553619385 seconds.
2021-03-03 18:29:54 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-03 18:29:54 - automl.py - WARNING - No need to validation!
2021-03-03 18:29:54 - automl.py - INFO - Need to delete columns:  from original DataFrame.
2021-03-03 18:29:54 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-03 18:29:54 - automl.py - INFO - Prediction step finishes.
2021-03-03 18:29:54 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-03 18:29:54 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-03 18:29:54 - automl.py - INFO - Prediction step finishes.
2021-03-03 18:30:29 - logger - INFO - Start logging for `logger`
2021-03-03 18:30:29 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 18:30:30 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 18:30:30 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 18:30:30 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 18:30:30 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 18:30:31 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-03 18:30:31 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-03 18:30:31 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-03 18:30:31 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-03 18:30:31 - pipeline_training.py - INFO - Start to transform training data.
2021-03-03 18:30:31 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-03 18:30:31 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-03 18:30:31 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-03 18:30:31 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-03 18:30:31 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-03 18:30:31 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-03 18:30:50 - model_selection.py - INFO - Model selection training has finished.
2021-03-03 18:30:50 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-03 18:30:50 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.794627
2021-03-03 18:30:50 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.799084
2021-03-03 18:30:50 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.78904
2021-03-03 18:30:50 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-03 18:30:50 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.799084
2021-03-03 18:30:50 - model_selection.py - INFO - Start to save model: LogisticRegression-0.794627
2021-03-03 18:30:50 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.78904
2021-03-03 18:30:50 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.78904.pkl	LogisticRegression-0.794627.pkl	SupportVectorMachine-0.799084.pkl
2021-03-03 18:30:50 - pipeline_training.py - INFO - Training pipeline finished takes: 19 seconds.
2021-03-03 18:30:50 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-03 18:30:50 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 18:30:50 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 18:30:50 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 18:30:50 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 18:30:50 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-03 18:30:52 - model_ensemble.py - INFO - Stacking model score: 0.77095
2021-03-03 18:30:52 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-03 18:30:52 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-03 18:30:52 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-03 18:30:52 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-03 18:30:52 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-03 18:30:52 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-03 18:30:52 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-03 18:30:59 - neural_network_search.py - INFO - Get best scores are: [0.391061]
2021-03-03 18:30:59 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-03 18:30:59 - neural_network_search.py - INFO - Try to clean serach model space folder: JzWhTVWMeE
2021-03-03 18:30:59 - neural_network_search.py - INFO - Folder: JzWhTVWMeE has been deleted!
2021-03-03 18:30:59 - neural_network_search.py - INFO - Whole fitting logic finished used 7.715303659439087 seconds.
2021-03-03 18:30:59 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-03 18:31:00 - automl.py - WARNING - No need to validation!
2021-03-03 18:31:00 - automl.py - INFO - Need to delete columns:  from original DataFrame.
2021-03-03 18:31:00 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-03 18:31:00 - automl.py - INFO - Prediction step finishes.
2021-03-03 18:31:00 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-03 18:31:00 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-03 18:31:00 - automl.py - INFO - Prediction step finishes.
2021-03-03 18:31:00 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-03 18:31:00 - automl.py - INFO - Prediction step finishes.
2021-03-03 18:34:49 - logger - INFO - Start logging for `logger`
2021-03-03 18:34:49 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-03 18:34:49 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-03 18:34:50 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-03 18:34:50 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-03 18:34:50 - automl.py - INFO - Start logging for `automl.py`
2021-03-03 18:34:52 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-03 18:34:52 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-03 18:34:52 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-03 18:34:52 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-03 18:34:52 - pipeline_training.py - INFO - Start to transform training data.
2021-03-03 18:34:52 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-03 18:34:52 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-03 18:34:52 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-03 18:34:52 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-03 18:34:52 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-03 18:34:52 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-03 18:35:49 - model_selection.py - INFO - Model selection training has finished.
2021-03-03 18:35:49 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-03 18:35:49 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.794627
2021-03-03 18:35:49 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.778922
2021-03-03 18:35:49 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.79688
2021-03-03 18:35:49 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-03 18:35:49 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.79688
2021-03-03 18:35:49 - model_selection.py - INFO - Start to save model: LogisticRegression-0.794627
2021-03-03 18:35:49 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.778922
2021-03-03 18:35:49 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.79688.pkl	LogisticRegression-0.794627.pkl	SupportVectorMachine-0.778922.pkl
2021-03-03 18:35:49 - pipeline_training.py - INFO - Training pipeline finished takes: 57 seconds.
2021-03-03 18:35:49 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-03 18:35:49 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-03 18:35:49 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-03 18:35:49 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-03 18:35:49 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-03 18:35:49 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-03 18:35:53 - model_ensemble.py - INFO - Stacking model score: 0.787709
2021-03-03 18:35:53 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 4 seconds.
2021-03-03 18:35:53 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-03 18:35:53 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-03 18:35:53 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-03 18:35:53 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-03 18:35:53 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-03 18:35:54 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-03 18:37:10 - neural_network_search.py - INFO - Get best scores are: [0.743017	0.726257	0.715084	0.709497	0.636872]
2021-03-03 18:37:10 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-03 18:37:11 - neural_network_search.py - INFO - Try to clean serach model space folder: POWJynIZJI
2021-03-03 18:37:12 - neural_network_search.py - INFO - Folder: POWJynIZJI has been deleted!
2021-03-03 18:37:12 - neural_network_search.py - INFO - Whole fitting logic finished used 77.75491452217102 seconds.
2021-03-03 18:37:12 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-03 18:37:12 - automl.py - WARNING - No need to validation!
2021-03-03 18:37:13 - automl.py - INFO - Need to delete columns:  from original DataFrame.
2021-03-03 18:37:13 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-03 18:37:13 - automl.py - INFO - Prediction step finishes.
2021-03-03 18:37:13 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-03 18:37:13 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-03 18:37:13 - automl.py - INFO - Prediction step finishes.
2021-03-03 18:37:13 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-03 18:37:13 - automl.py - INFO - Prediction step finishes.
