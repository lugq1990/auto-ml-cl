2021-03-05 10:00:20 - logger - INFO - Start logging for `logger`
2021-03-05 10:00:20 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-05 10:00:21 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-05 10:00:21 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-05 10:00:21 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-05 10:00:21 - automl.py - INFO - Start logging for `automl.py`
2021-03-05 10:00:22 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-05 10:00:22 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-05 10:00:22 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-05 10:00:22 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-05 10:00:22 - pipeline_training.py - INFO - Start to transform training data.
2021-03-05 10:00:22 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-05 10:00:22 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-05 10:00:22 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-05 10:00:22 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-05 10:00:22 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-05 10:00:22 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-05 10:00:45 - model_selection.py - INFO - Model selection training has finished.
2021-03-05 10:00:45 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-05 10:00:45 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.786595
2021-03-05 10:00:45 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.789392
2021-03-05 10:00:45 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.793598
2021-03-05 10:00:45 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-05 10:00:45 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.793598
2021-03-05 10:00:45 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.789392
2021-03-05 10:00:45 - model_selection.py - INFO - Start to save model: LogisticRegression-0.786595
2021-03-05 10:00:45 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.793598.pkl	LogisticRegression-0.786595.pkl	SupportVectorMachine-0.789392.pkl
2021-03-05 10:00:45 - pipeline_training.py - INFO - Training pipeline finished takes: 22 seconds.
2021-03-05 10:00:45 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-05 10:00:45 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-05 10:00:45 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-05 10:00:45 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-05 10:00:45 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-05 10:00:45 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-03-05 10:00:46 - model_ensemble.py - INFO - Stacking model score: 0.797203
2021-03-05 10:00:46 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-05 10:00:46 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-05 10:00:46 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-05 10:00:46 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-05 10:00:46 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-05 10:00:46 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-05 10:00:46 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-05 10:01:16 - neural_network_search.py - INFO - Get best scores are: [0.699301	0.692308	0.671329	0.65035	0.65035]
2021-03-05 10:01:16 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-05 10:01:16 - neural_network_search.py - INFO - Try to clean serach model space folder: eldqhefZvC
2021-03-05 10:01:16 - neural_network_search.py - INFO - Folder: eldqhefZvC has been deleted!
2021-03-05 10:01:16 - neural_network_search.py - INFO - Whole fitting logic finished used 30.266480445861816 seconds.
2021-03-05 10:01:16 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-05 10:01:17 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.793598.pkl	LogisticRegression-0.786595.pkl	Stacking-0.797203.pkl	SupportVectorMachine-0.789392.pkl	DNN-0.65035.h5	DNN-0.671329.h5	DNN-0.692308.h5	DNN-0.699301.h5
2021-03-05 10:01:17 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.7943522979880075).
2021-03-05 10:01:17 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.7943522979880075) get score: 0.8101.
2021-03-05 10:01:17 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=7.764588101555554).
2021-03-05 10:01:17 - pipeline_training.py - INFO - Model: LogisticRegression(C=7.764588101555554) get score: 0.8156.
2021-03-05 10:01:17 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-03-05 10:01:17 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-03-05 10:01:17 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-05 10:01:17 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-05 10:01:17 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-05 10:01:17 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-05 10:01:17 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.8101.
2021-03-05 10:01:17 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=4.634970941612692).
2021-03-05 10:01:17 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=4.634970941612692) get score: 0.8212.
2021-03-05 10:01:17 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000242BA6F2B70>.
2021-03-05 10:01:18 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000242BA6F2B70> get score: 0.6760.
2021-03-05 10:01:18 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000242BA611128>.
2021-03-05 10:01:18 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000242BA611128> get score: 0.7486.
2021-03-05 10:01:18 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000242BD9DBF98>.
2021-03-05 10:01:18 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000242BD9DBF98> get score: 0.6872.
2021-03-05 10:01:18 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000242BFD0D470>.
2021-03-05 10:01:18 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000242BFD0D470> get score: 0.7263.
2021-03-05 10:01:18 - automl.py - INFO - Model name                         |Train score                        |Validation score                   
2021-03-05 10:01:18 - automl.py - INFO - SupportVectorMachine-0.789392.pkl  |0.789392                           |0.821229                           
2021-03-05 10:01:18 - automl.py - INFO - LogisticRegression-0.786595.pkl    |0.786595                           |0.815642                           
2021-03-05 10:01:18 - automl.py - INFO - GradientBoostingTree-0.793598.pkl  |0.793598                           |0.810056                           
2021-03-05 10:01:18 - automl.py - INFO - Stacking-0.797203.pkl              |0.797203                           |0.810056                           
2021-03-05 10:01:18 - automl.py - INFO - DNN-0.671329.h5                    |0.671329                           |0.748603                           
2021-03-05 10:01:18 - automl.py - INFO - DNN-0.699301.h5                    |0.699301                           |0.726257                           
2021-03-05 10:01:18 - automl.py - INFO - DNN-0.692308.h5                    |0.692308                           |0.687151                           
2021-03-05 10:01:18 - automl.py - INFO - DNN-0.65035.h5                     |0.65035                            |0.675978                           
2021-03-05 10:01:18 - automl.py - INFO - Whole training pipeline takes: 55.72 seconds!
2021-03-05 10:02:35 - logger - INFO - Start logging for `logger`
2021-03-05 10:02:35 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-05 10:02:36 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-05 10:02:36 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-05 10:02:36 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-05 10:02:36 - automl.py - INFO - Start logging for `automl.py`
2021-03-05 10:02:37 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-05 10:02:37 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-05 10:02:37 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-05 10:02:37 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-05 10:02:37 - pipeline_training.py - INFO - Start to transform training data.
2021-03-05 10:02:37 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-05 10:02:37 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-05 10:02:37 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-05 10:02:37 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-05 10:02:37 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-05 10:02:37 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-05 10:03:14 - model_selection.py - INFO - Model selection training has finished.
2021-03-05 10:03:14 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-05 10:03:14 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.800571
2021-03-05 10:03:14 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.779543
2021-03-05 10:03:14 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.787994
2021-03-05 10:03:14 - model_selection.py - INFO - Algorithm: XGBClassifier with score: 0.786575
2021-03-05 10:03:14 - model_selection.py - INFO - Algorithm: LightGBMClassifier with score: 0.785196
2021-03-05 10:03:14 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-05 10:03:14 - model_selection.py - INFO - Start to save model: LogisticRegression-0.800571
2021-03-05 10:03:14 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.787994
2021-03-05 10:03:14 - model_selection.py - INFO - Start to save model: XGBClassifier-0.786575
2021-03-05 10:03:14 - model_selection.py - INFO - Start to save model: LightGBMClassifier-0.785196
2021-03-05 10:03:14 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.779543
2021-03-05 10:03:14 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.787994.pkl	LightGBMClassifier-0.785196.pkl	LogisticRegression-0.800571.pkl	SupportVectorMachine-0.779543.pkl	XGBClassifier-0.786575.pkl
2021-03-05 10:03:14 - pipeline_training.py - INFO - Training pipeline finished takes: 37 seconds.
2021-03-05 10:03:14 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-05 10:03:14 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-05 10:03:14 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-05 10:03:14 - model_ensemble.py - INFO - To get prediction for estimator: LightGBMClassifier
2021-03-05 10:03:14 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-05 10:03:14 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-05 10:03:14 - model_ensemble.py - INFO - To get prediction for estimator: XGBClassifier
2021-03-05 10:03:14 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :22
2021-03-05 10:03:15 - model_ensemble.py - INFO - Stacking model score: 0.804196
2021-03-05 10:03:15 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-05 10:03:15 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-05 10:03:15 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-05 10:03:15 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-05 10:03:15 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-05 10:03:15 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-05 10:03:15 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-05 10:03:41 - neural_network_search.py - INFO - Get best scores are: [0.797203	0.79021	0.734266	0.727273	0.685315]
2021-03-05 10:03:41 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-05 10:03:42 - neural_network_search.py - INFO - Try to clean serach model space folder: pykdJNYfYU
2021-03-05 10:03:42 - neural_network_search.py - INFO - Folder: pykdJNYfYU has been deleted!
2021-03-05 10:03:42 - neural_network_search.py - INFO - Whole fitting logic finished used 26.423859357833862 seconds.
2021-03-05 10:03:42 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-05 10:03:42 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.787994.pkl	LightGBMClassifier-0.785196.pkl	LogisticRegression-0.800571.pkl	Stacking-0.804196.pkl	SupportVectorMachine-0.779543.pkl	XGBClassifier-0.786575.pkl	DNN-0.685315.h5	DNN-0.727273.h5	DNN-0.734266.h5	DNN-0.79021.h5	DNN-0.797203.h5
2021-03-05 10:03:42 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.803853455759669, n_estimators=500).
2021-03-05 10:03:42 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.803853455759669, n_estimators=500) get score: 0.7709.
2021-03-05 10:03:42 - pipeline_training.py - INFO - Start to get model score for model: LightGBMClassifier(learning_rate=0.5059851742682241, n_estimators=300).
2021-03-05 10:03:42 - pipeline_training.py - INFO - Model: LightGBMClassifier(learning_rate=0.5059851742682241, n_estimators=300) get score: 0.7598.
2021-03-05 10:03:43 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=1.9960425587510338).
2021-03-05 10:03:43 - pipeline_training.py - INFO - Model: LogisticRegression(C=1.9960425587510338) get score: 0.7654.
2021-03-05 10:03:43 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-03-05 10:03:43 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-03-05 10:03:43 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-05 10:03:43 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-05 10:03:43 - model_ensemble.py - INFO - To get prediction for estimator: LightGBMClassifier
2021-03-05 10:03:43 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-05 10:03:43 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-05 10:03:43 - model_ensemble.py - INFO - To get prediction for estimator: XGBClassifier
2021-03-05 10:03:43 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.7654.
2021-03-05 10:03:43 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=2.7986667922981523).
2021-03-05 10:03:43 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=2.7986667922981523) get score: 0.7654.
2021-03-05 10:03:43 - pipeline_training.py - INFO - Start to get model score for model: XGBClassifier(learning_rate=0.8771733083946738, n_estimators=300).
2021-03-05 10:03:43 - pipeline_training.py - INFO - Model: XGBClassifier(learning_rate=0.8771733083946738, n_estimators=300) get score: 0.7709.
2021-03-05 10:03:43 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000025C36974CC0>.
2021-03-05 10:03:43 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000025C36974CC0> get score: 0.5866.
2021-03-05 10:03:43 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000025C3B6C7EF0>.
2021-03-05 10:03:43 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000025C3B6C7EF0> get score: 0.7542.
2021-03-05 10:03:43 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000025C3B6E6DD8>.
2021-03-05 10:03:43 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000025C3B6E6DD8> get score: 0.7207.
2021-03-05 10:03:43 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000025C3B6C7550>.
2021-03-05 10:03:43 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000025C3B6C7550> get score: 0.7374.
2021-03-05 10:03:43 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000025C37B98F60>.
2021-03-05 10:03:44 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000025C37B98F60> get score: 0.7207.
2021-03-05 10:03:44 - automl.py - INFO - Model name                         |Train score                        |Validation score                   
2021-03-05 10:03:44 - automl.py - INFO - GradientBoostingTree-0.787994.pkl  |0.787994                           |0.77095                            
2021-03-05 10:03:44 - automl.py - INFO - XGBClassifier-0.786575.pkl         |0.786575                           |0.77095                            
2021-03-05 10:03:44 - automl.py - INFO - LogisticRegression-0.800571.pkl    |0.800571                           |0.765363                           
2021-03-05 10:03:44 - automl.py - INFO - Stacking-0.804196.pkl              |0.804196                           |0.765363                           
2021-03-05 10:03:44 - automl.py - INFO - SupportVectorMachine-0.779543.pkl  |0.779543                           |0.765363                           
2021-03-05 10:03:44 - automl.py - INFO - LightGBMClassifier-0.785196.pkl    |0.785196                           |0.759777                           
2021-03-05 10:03:44 - automl.py - INFO - DNN-0.727273.h5                    |0.727273                           |0.75419                            
2021-03-05 10:03:44 - automl.py - INFO - DNN-0.79021.h5                     |0.79021                            |0.73743                            
2021-03-05 10:03:44 - automl.py - INFO - DNN-0.734266.h5                    |0.734266                           |0.72067                            
2021-03-05 10:03:44 - automl.py - INFO - DNN-0.797203.h5                    |0.797203                           |0.72067                            
2021-03-05 10:03:44 - automl.py - INFO - DNN-0.685315.h5                    |0.685315                           |0.586592                           
2021-03-05 10:03:44 - automl.py - INFO - Whole training pipeline takes: 66.42 seconds!
2021-03-05 10:25:57 - logger - INFO - Start logging for `logger`
2021-03-05 10:25:57 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-05 10:25:57 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-05 10:25:58 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-05 10:25:58 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-05 10:25:58 - automl.py - INFO - Start logging for `automl.py`
2021-03-05 10:25:59 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-05 10:25:59 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-05 10:25:59 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-05 10:25:59 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-05 10:25:59 - pipeline_training.py - INFO - Start to transform training data.
2021-03-05 10:25:59 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-05 10:25:59 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-05 10:25:59 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-05 10:25:59 - pipeline_training.py - INFO - After processing, data shape: 16
2021-03-05 10:25:59 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-05 10:25:59 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-05 10:26:50 - pipeline_training.py - ERROR - When do real pipeline training get error: __init__() got an unexpected keyword argument 'min_sample_split'
2021-03-05 10:28:14 - logger - INFO - Start logging for `logger`
2021-03-05 10:28:14 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-05 10:28:14 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-05 10:28:14 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-05 10:28:14 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-05 10:28:14 - automl.py - INFO - Start logging for `automl.py`
2021-03-05 10:28:14 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-05 10:28:14 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-05 10:28:14 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-05 10:28:14 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-05 10:28:14 - pipeline_training.py - INFO - Start to transform training data.
2021-03-05 10:28:14 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-05 10:28:14 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-05 10:28:14 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-05 10:28:14 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-05 10:28:14 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-05 10:28:14 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-05 10:29:03 - pipeline_training.py - ERROR - When do real pipeline training get error: __init__() got an unexpected keyword argument 'min_sample_leaf'
2021-03-05 10:29:48 - logger - INFO - Start logging for `logger`
2021-03-05 10:29:48 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-05 10:29:48 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-05 10:29:49 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-05 10:29:49 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-05 10:29:49 - automl.py - INFO - Start logging for `automl.py`
2021-03-05 10:29:49 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-05 10:29:49 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-05 10:29:49 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-05 10:29:49 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-05 10:29:49 - pipeline_training.py - INFO - Start to transform training data.
2021-03-05 10:29:49 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-05 10:29:49 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-05 10:29:49 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-05 10:29:49 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-05 10:29:49 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-05 10:29:49 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-05 10:30:32 - pipeline_training.py - ERROR - When do real pipeline training get error: cannot import name 'AdaboostClassifier'
2021-03-05 10:31:50 - logger - INFO - Start logging for `logger`
2021-03-05 10:31:50 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-05 10:31:50 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-05 10:31:51 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-05 10:31:51 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-05 10:31:51 - automl.py - INFO - Start logging for `automl.py`
2021-03-05 10:31:51 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-05 10:31:51 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-05 10:31:51 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-05 10:31:51 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-05 10:31:51 - pipeline_training.py - INFO - Start to transform training data.
2021-03-05 10:31:51 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-05 10:31:51 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-05 10:31:51 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-05 10:31:51 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-05 10:31:51 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-05 10:31:51 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-05 10:33:23 - model_selection.py - INFO - Model selection training has finished.
2021-03-05 10:33:23 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-05 10:33:23 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.776637
2021-03-05 10:33:23 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.783621
2021-03-05 10:33:23 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.800492
2021-03-05 10:33:23 - model_selection.py - INFO - Algorithm: XGBClassifier with score: 0.800502
2021-03-05 10:33:23 - model_selection.py - INFO - Algorithm: LightGBMClassifier with score: 0.796267
2021-03-05 10:33:23 - model_selection.py - INFO - Algorithm: RandomForestClassifier with score: 0.796287
2021-03-05 10:33:23 - model_selection.py - INFO - Algorithm: KNNClassifier with score: 0.789294
2021-03-05 10:33:23 - model_selection.py - INFO - Algorithm: DecisionTreeClassifier with score: 0.787876
2021-03-05 10:33:23 - model_selection.py - INFO - Algorithm: AdaboostClassifier with score: 0.797735
2021-03-05 10:33:23 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-05 10:33:23 - model_selection.py - INFO - Start to save model: XGBClassifier-0.800502
2021-03-05 10:33:23 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.800492
2021-03-05 10:33:23 - model_selection.py - INFO - Start to save model: AdaboostClassifier-0.797735
2021-03-05 10:33:23 - model_selection.py - INFO - Start to save model: RandomForestClassifier-0.796287
2021-03-05 10:33:23 - model_selection.py - INFO - Start to save model: LightGBMClassifier-0.796267
2021-03-05 10:33:23 - model_selection.py - INFO - Start to save model: KNNClassifier-0.789294
2021-03-05 10:33:23 - model_selection.py - INFO - Start to save model: DecisionTreeClassifier-0.787876
2021-03-05 10:33:23 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.783621
2021-03-05 10:33:23 - model_selection.py - INFO - Start to save model: LogisticRegression-0.776637
2021-03-05 10:33:23 - model_selection.py - INFO - Already have saved models: AdaboostClassifier-0.797735.pkl	DecisionTreeClassifier-0.787876.pkl	GradientBoostingTree-0.800492.pkl	KNNClassifier-0.789294.pkl	LightGBMClassifier-0.796267.pkl	LogisticRegression-0.776637.pkl	RandomForestClassifier-0.796287.pkl	SupportVectorMachine-0.783621.pkl	XGBClassifier-0.800502.pkl
2021-03-05 10:33:23 - pipeline_training.py - INFO - Training pipeline finished takes: 92 seconds.
2021-03-05 10:33:23 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-05 10:33:23 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-05 10:33:23 - model_ensemble.py - INFO - To get prediction for estimator: AdaboostClassifier
2021-03-05 10:33:23 - model_ensemble.py - INFO - To get prediction for estimator: DecisionTreeClassifier
2021-03-05 10:33:23 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-05 10:33:23 - model_ensemble.py - INFO - To get prediction for estimator: KNNClassifier
2021-03-05 10:33:23 - model_ensemble.py - INFO - To get prediction for estimator: LightGBMClassifier
2021-03-05 10:33:23 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-05 10:33:23 - model_ensemble.py - INFO - To get prediction for estimator: RandomForestClassifier
2021-03-05 10:33:23 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-05 10:33:23 - model_ensemble.py - INFO - To get prediction for estimator: XGBClassifier
2021-03-05 10:33:23 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :26
2021-03-05 10:33:24 - model_ensemble.py - INFO - Stacking model score: 0.853147
2021-03-05 10:33:24 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-05 10:33:24 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-05 10:33:24 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-05 10:33:24 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-05 10:33:24 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-05 10:33:24 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-05 10:33:25 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-05 10:33:53 - neural_network_search.py - INFO - Get best scores are: [0.797203	0.783217	0.776224	0.776224	0.727273]
2021-03-05 10:33:53 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-05 10:33:54 - neural_network_search.py - INFO - Try to clean serach model space folder: XScjrxLOPZ
2021-03-05 10:33:54 - neural_network_search.py - INFO - Folder: XScjrxLOPZ has been deleted!
2021-03-05 10:33:54 - neural_network_search.py - INFO - Whole fitting logic finished used 29.399339199066162 seconds.
2021-03-05 10:33:54 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-05 10:33:55 - pipeline_training.py - INFO - Get model list: AdaboostClassifier-0.797735.pkl	DecisionTreeClassifier-0.787876.pkl	GradientBoostingTree-0.800492.pkl	KNNClassifier-0.789294.pkl	LightGBMClassifier-0.796267.pkl	LogisticRegression-0.776637.pkl	RandomForestClassifier-0.796287.pkl	Stacking-0.853147.pkl	SupportVectorMachine-0.783621.pkl	XGBClassifier-0.800502.pkl	DNN-0.727273.h5	DNN-0.776224.h5	DNN-0.783217.h5	DNN-0.797203.h5
2021-03-05 10:33:55 - pipeline_training.py - INFO - Start to get model score for model: AdaboostClassifier(learning_rate=0.7155750067130712).
2021-03-05 10:33:55 - pipeline_training.py - INFO - Model: AdaboostClassifier(learning_rate=0.7155750067130712) get score: 0.7821.
2021-03-05 10:33:55 - pipeline_training.py - INFO - Start to get model score for model: DecisionTreeClassifier(min_sample_leaf=None).
2021-03-05 10:33:55 - pipeline_training.py - INFO - Model: DecisionTreeClassifier(min_sample_leaf=None) get score: 0.7709.
2021-03-05 10:33:55 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.2836996125916657, n_estimators=300).
2021-03-05 10:33:55 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.2836996125916657, n_estimators=300) get score: 0.7765.
2021-03-05 10:33:55 - pipeline_training.py - INFO - Start to get model score for model: KNNClassifier(n_neighbors=10).
2021-03-05 10:33:55 - pipeline_training.py - INFO - Model: KNNClassifier(n_neighbors=10) get score: 0.7598.
2021-03-05 10:33:55 - pipeline_training.py - INFO - Start to get model score for model: LightGBMClassifier(learning_rate=0.364239097258288).
2021-03-05 10:33:55 - pipeline_training.py - INFO - Model: LightGBMClassifier(learning_rate=0.364239097258288) get score: 0.7765.
2021-03-05 10:33:55 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=1.9960425587510338).
2021-03-05 10:33:55 - pipeline_training.py - INFO - Model: LogisticRegression(C=1.9960425587510338) get score: 0.7877.
2021-03-05 10:33:55 - pipeline_training.py - INFO - Start to get model score for model: RandomForestClassifier(n_estimators=300).
2021-03-05 10:33:55 - pipeline_training.py - INFO - Model: RandomForestClassifier(n_estimators=300) get score: 0.7765.
2021-03-05 10:33:55 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-03-05 10:33:55 - pipeline_training.py - INFO - Start to get model score for model: AdaboostClassifier().
2021-03-05 10:33:55 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-05 10:33:55 - model_ensemble.py - INFO - To get prediction for estimator: AdaboostClassifier
2021-03-05 10:33:55 - model_ensemble.py - INFO - To get prediction for estimator: DecisionTreeClassifier
2021-03-05 10:33:55 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-05 10:33:55 - model_ensemble.py - INFO - To get prediction for estimator: KNNClassifier
2021-03-05 10:33:55 - model_ensemble.py - INFO - To get prediction for estimator: LightGBMClassifier
2021-03-05 10:33:55 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-05 10:33:55 - model_ensemble.py - INFO - To get prediction for estimator: RandomForestClassifier
2021-03-05 10:33:55 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-05 10:33:55 - model_ensemble.py - INFO - To get prediction for estimator: XGBClassifier
2021-03-05 10:33:55 - pipeline_training.py - INFO - Model: AdaboostClassifier() get score: 0.7542.
2021-03-05 10:33:55 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=20).
2021-03-05 10:33:55 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=20) get score: 0.7598.
2021-03-05 10:33:55 - pipeline_training.py - INFO - Start to get model score for model: XGBClassifier(learning_rate=0.9585579601468681, n_estimators=300).
2021-03-05 10:33:56 - pipeline_training.py - INFO - Model: XGBClassifier(learning_rate=0.9585579601468681, n_estimators=300) get score: 0.7821.
2021-03-05 10:33:56 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000182FF2D3C50>.
2021-03-05 10:33:56 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000182FF2D3C50> get score: 0.6648.
2021-03-05 10:33:56 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000182FE257A58>.
2021-03-05 10:33:56 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000182FE257A58> get score: 0.6927.
2021-03-05 10:33:56 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000182FF3D1780>.
2021-03-05 10:33:56 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000182FF3D1780> get score: 0.7374.
2021-03-05 10:33:56 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000182FE2ADBA8>.
2021-03-05 10:33:56 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x00000182FE2ADBA8> get score: 0.7933.
2021-03-05 10:33:56 - automl.py - INFO - Model name                         |Train score                        |Validation score                   
2021-03-05 10:33:56 - automl.py - INFO - DNN-0.797203.h5                    |0.797203                           |0.793296                           
2021-03-05 10:33:56 - automl.py - INFO - LogisticRegression-0.776637.pkl    |0.776637                           |0.787709                           
2021-03-05 10:33:56 - automl.py - INFO - AdaboostClassifier-0.797735.pkl    |0.797735                           |0.782123                           
2021-03-05 10:33:56 - automl.py - INFO - XGBClassifier-0.800502.pkl         |0.800502                           |0.782123                           
2021-03-05 10:33:56 - automl.py - INFO - GradientBoostingTree-0.800492.pkl  |0.800492                           |0.776536                           
2021-03-05 10:33:56 - automl.py - INFO - LightGBMClassifier-0.796267.pkl    |0.796267                           |0.776536                           
2021-03-05 10:33:56 - automl.py - INFO - RandomForestClassifier-0.796287.pkl|0.796287                           |0.776536                           
2021-03-05 10:33:56 - automl.py - INFO - DecisionTreeClassifier-0.787876.pkl|0.787876                           |0.77095                            
2021-03-05 10:33:56 - automl.py - INFO - KNNClassifier-0.789294.pkl         |0.789294                           |0.759777                           
2021-03-05 10:33:56 - automl.py - INFO - SupportVectorMachine-0.783621.pkl  |0.783621                           |0.759777                           
2021-03-05 10:33:56 - automl.py - INFO - Stacking-0.853147.pkl              |0.853147                           |0.75419                            
2021-03-05 10:33:56 - automl.py - INFO - DNN-0.783217.h5                    |0.783217                           |0.73743                            
2021-03-05 10:33:56 - automl.py - INFO - DNN-0.776224.h5                    |0.776224                           |0.692737                           
2021-03-05 10:33:56 - automl.py - INFO - DNN-0.727273.h5                    |0.727273                           |0.664804                           
2021-03-05 10:33:56 - automl.py - INFO - Whole training pipeline takes: 125.23 seconds!
2021-03-05 10:36:19 - logger - INFO - Start logging for `logger`
2021-03-05 10:36:19 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-05 10:36:20 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-05 10:36:20 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-05 10:36:20 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-05 10:36:20 - automl.py - INFO - Start logging for `automl.py`
2021-03-05 10:36:21 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-05 10:39:32 - logger - INFO - Start logging for `logger`
2021-03-05 10:39:32 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-05 10:39:33 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-05 10:39:33 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-05 10:39:33 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-05 10:39:33 - automl.py - INFO - Start logging for `automl.py`
2021-03-05 10:39:33 - logger - WARNING - There isn't any trained models in folder: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\models
2021-03-05 10:39:33 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-05 10:41:04 - logger - INFO - Start logging for `logger`
2021-03-05 10:41:04 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-05 10:41:04 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-05 10:41:04 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-05 10:41:04 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-05 10:41:04 - automl.py - INFO - Start logging for `automl.py`
2021-03-05 10:41:04 - logger - WARNING - There isn't any trained models in folder: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\models
2021-03-05 10:41:04 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-05 10:41:04 - pipeline_training.py - INFO - Get training algorithms: ['LogisticRegression', 'SupportVectorMachine', 'GradientBoostingTree', 'XGBClassifier', 'LightGBMClassifier', 'RandomForestClassifier', 'KNNClassifier', 'DecisionTreeClassifier', 'AdaboostClassifier']
2021-03-05 10:41:04 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-05 10:41:04 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-05 10:41:04 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-05 10:41:04 - pipeline_training.py - INFO - Start to transform training data.
2021-03-05 10:41:05 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-05 10:41:05 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-05 10:41:05 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-05 10:41:05 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-05 10:41:05 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-05 10:41:05 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-05 10:41:05 - pipeline_training.py - ERROR - When do real pipeline training get error: 'GridSearchCV' object has no attribute 'name'
2021-03-05 10:44:06 - logger - INFO - Start logging for `logger`
2021-03-05 10:44:06 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-05 10:44:07 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-05 10:44:07 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-05 10:44:07 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-05 10:44:07 - automl.py - INFO - Start logging for `automl.py`
2021-03-05 10:44:07 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-05 10:44:07 - pipeline_training.py - INFO - Get training algorithms: ['LogisticRegression', 'SupportVectorMachine', 'GradientBoostingTree', 'XGBClassifier', 'LightGBMClassifier', 'RandomForestClassifier', 'KNNClassifier', 'DecisionTreeClassifier', 'AdaboostClassifier']
2021-03-05 10:44:07 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-05 10:44:07 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-05 10:44:07 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-05 10:44:07 - pipeline_training.py - INFO - Start to transform training data.
2021-03-05 10:44:07 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-05 10:44:07 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-05 10:44:07 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-05 10:44:07 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-05 10:44:07 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-05 10:44:07 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-05 10:44:07 - model_selection.py - INFO - Start to `fit` for algorithm: LogisticRegression
2021-03-05 10:44:08 - model_selection.py - INFO - Start to `fit` for algorithm: SupportVectorMachine
2021-03-05 10:44:10 - model_selection.py - INFO - Start to `fit` for algorithm: GradientBoostingTree
2021-03-05 10:44:28 - model_selection.py - INFO - Start to `fit` for algorithm: XGBClassifier
2021-03-05 10:44:40 - model_selection.py - INFO - Start to `fit` for algorithm: LightGBMClassifier
2021-03-05 10:44:46 - model_selection.py - INFO - Start to `fit` for algorithm: RandomForestClassifier
2021-03-05 10:44:55 - model_selection.py - INFO - Start to `fit` for algorithm: KNNClassifier
2021-03-05 10:44:55 - model_selection.py - INFO - Start to `fit` for algorithm: DecisionTreeClassifier
2021-03-05 10:44:55 - model_selection.py - INFO - Start to `fit` for algorithm: AdaboostClassifier
2021-03-05 10:45:02 - model_selection.py - INFO - Model selection training has finished.
2021-03-05 10:45:02 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-05 10:45:02 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.80196
2021-03-05 10:45:02 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.786487
2021-03-05 10:45:02 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.783719
2021-03-05 10:45:02 - model_selection.py - INFO - Algorithm: XGBClassifier with score: 0.785108
2021-03-05 10:45:02 - model_selection.py - INFO - Algorithm: LightGBMClassifier with score: 0.785098
2021-03-05 10:45:02 - model_selection.py - INFO - Algorithm: RandomForestClassifier with score: 0.78368
2021-03-05 10:45:02 - model_selection.py - INFO - Algorithm: KNNClassifier with score: 0.769654
2021-03-05 10:45:02 - model_selection.py - INFO - Algorithm: DecisionTreeClassifier with score: 0.786506
2021-03-05 10:45:02 - model_selection.py - INFO - Algorithm: AdaboostClassifier with score: 0.780882
2021-03-05 10:45:02 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-05 10:45:02 - model_selection.py - INFO - Start to save model: LogisticRegression-0.80196
2021-03-05 10:45:02 - model_selection.py - INFO - Start to save model: DecisionTreeClassifier-0.786506
2021-03-05 10:45:02 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.786487
2021-03-05 10:45:02 - model_selection.py - INFO - Start to save model: XGBClassifier-0.785108
2021-03-05 10:45:02 - model_selection.py - INFO - Start to save model: LightGBMClassifier-0.785098
2021-03-05 10:45:02 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.783719
2021-03-05 10:45:02 - model_selection.py - INFO - Start to save model: RandomForestClassifier-0.78368
2021-03-05 10:45:02 - model_selection.py - INFO - Start to save model: AdaboostClassifier-0.780882
2021-03-05 10:45:02 - model_selection.py - INFO - Start to save model: KNNClassifier-0.769654
2021-03-05 10:45:02 - model_selection.py - INFO - Already have saved models: AdaboostClassifier-0.780882.pkl	DecisionTreeClassifier-0.786506.pkl	GradientBoostingTree-0.783719.pkl	KNNClassifier-0.769654.pkl	LightGBMClassifier-0.785098.pkl	LogisticRegression-0.80196.pkl	RandomForestClassifier-0.78368.pkl	SupportVectorMachine-0.786487.pkl	XGBClassifier-0.785108.pkl
2021-03-05 10:45:02 - pipeline_training.py - INFO - Training pipeline finished takes: 55 seconds.
2021-03-05 10:45:02 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-05 10:45:02 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-05 10:45:02 - model_ensemble.py - INFO - To get prediction for estimator: AdaboostClassifier
2021-03-05 10:45:02 - model_ensemble.py - INFO - To get prediction for estimator: DecisionTreeClassifier
2021-03-05 10:45:02 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-05 10:45:02 - model_ensemble.py - INFO - To get prediction for estimator: KNNClassifier
2021-03-05 10:45:02 - model_ensemble.py - INFO - To get prediction for estimator: LightGBMClassifier
2021-03-05 10:45:02 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-05 10:45:02 - model_ensemble.py - INFO - To get prediction for estimator: RandomForestClassifier
2021-03-05 10:45:02 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-05 10:45:02 - model_ensemble.py - INFO - To get prediction for estimator: XGBClassifier
2021-03-05 10:45:02 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :26
2021-03-05 10:45:03 - model_ensemble.py - INFO - Stacking model score: 0.846154
2021-03-05 10:45:03 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-05 10:45:03 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-05 10:45:03 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-05 10:45:03 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-05 10:45:03 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-05 10:45:03 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-05 10:45:04 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-05 10:45:34 - neural_network_search.py - INFO - Get best scores are: [0.783217	0.783217	0.755245	0.699301	0.699301]
2021-03-05 10:45:34 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-05 10:45:34 - neural_network_search.py - INFO - Try to clean serach model space folder: InWDntRQEr
2021-03-05 10:45:35 - neural_network_search.py - INFO - Folder: InWDntRQEr has been deleted!
2021-03-05 10:45:35 - neural_network_search.py - INFO - Whole fitting logic finished used 30.812559127807617 seconds.
2021-03-05 10:45:35 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-05 10:45:35 - pipeline_training.py - INFO - Get model list: AdaboostClassifier-0.780882.pkl	DecisionTreeClassifier-0.786506.pkl	GradientBoostingTree-0.783719.pkl	KNNClassifier-0.769654.pkl	LightGBMClassifier-0.785098.pkl	LogisticRegression-0.80196.pkl	RandomForestClassifier-0.78368.pkl	Stacking-0.846154.pkl	SupportVectorMachine-0.786487.pkl	XGBClassifier-0.785108.pkl	DNN-0.699301.h5	DNN-0.755245.h5	DNN-0.783217.h5
2021-03-05 10:45:35 - pipeline_training.py - INFO - Start to get model score for model: AdaboostClassifier(learning_rate=0.7155750067130712, n_estimators=100).
2021-03-05 10:45:35 - pipeline_training.py - INFO - Model: AdaboostClassifier(learning_rate=0.7155750067130712, n_estimators=100) get score: 0.7765.
2021-03-05 10:45:36 - pipeline_training.py - INFO - Start to get model score for model: DecisionTreeClassifier().
2021-03-05 10:45:36 - pipeline_training.py - INFO - Model: DecisionTreeClassifier() get score: 0.7821.
2021-03-05 10:45:36 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.803853455759669).
2021-03-05 10:45:36 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.803853455759669) get score: 0.7933.
2021-03-05 10:45:36 - pipeline_training.py - INFO - Start to get model score for model: KNNClassifier(n_neighbors=10).
2021-03-05 10:45:36 - pipeline_training.py - INFO - Model: KNNClassifier(n_neighbors=10) get score: 0.7765.
2021-03-05 10:45:36 - pipeline_training.py - INFO - Start to get model score for model: LightGBMClassifier(learning_rate=0.5059851742682241).
2021-03-05 10:45:36 - pipeline_training.py - INFO - Model: LightGBMClassifier(learning_rate=0.5059851742682241) get score: 0.7765.
2021-03-05 10:45:36 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=1.9960425587510338).
2021-03-05 10:45:36 - pipeline_training.py - INFO - Model: LogisticRegression(C=1.9960425587510338) get score: 0.7709.
2021-03-05 10:45:36 - pipeline_training.py - INFO - Start to get model score for model: RandomForestClassifier().
2021-03-05 10:45:36 - pipeline_training.py - INFO - Model: RandomForestClassifier() get score: 0.7709.
2021-03-05 10:45:36 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-03-05 10:45:36 - pipeline_training.py - INFO - Start to get model score for model: AdaboostClassifier().
2021-03-05 10:45:36 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-05 10:45:36 - model_ensemble.py - INFO - To get prediction for estimator: AdaboostClassifier
2021-03-05 10:45:36 - model_ensemble.py - INFO - To get prediction for estimator: DecisionTreeClassifier
2021-03-05 10:45:36 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-05 10:45:36 - model_ensemble.py - INFO - To get prediction for estimator: KNNClassifier
2021-03-05 10:45:36 - model_ensemble.py - INFO - To get prediction for estimator: LightGBMClassifier
2021-03-05 10:45:36 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-05 10:45:36 - model_ensemble.py - INFO - To get prediction for estimator: RandomForestClassifier
2021-03-05 10:45:36 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-05 10:45:36 - model_ensemble.py - INFO - To get prediction for estimator: XGBClassifier
2021-03-05 10:45:36 - pipeline_training.py - INFO - Model: AdaboostClassifier() get score: 0.7765.
2021-03-05 10:45:36 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=7.821760500376155).
2021-03-05 10:45:36 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=7.821760500376155) get score: 0.7765.
2021-03-05 10:45:36 - pipeline_training.py - INFO - Start to get model score for model: XGBClassifier(learning_rate=0.9585579601468681, n_estimators=300).
2021-03-05 10:45:36 - pipeline_training.py - INFO - Model: XGBClassifier(learning_rate=0.9585579601468681, n_estimators=300) get score: 0.7654.
2021-03-05 10:45:36 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000002F4F7DF1CF8>.
2021-03-05 10:45:37 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000002F4F7DF1CF8> get score: 0.7207.
2021-03-05 10:45:37 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000002F4F7E38588>.
2021-03-05 10:45:37 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000002F4F7E38588> get score: 0.7542.
2021-03-05 10:45:37 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000002F4F7E25C50>.
2021-03-05 10:45:37 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000002F4F7E25C50> get score: 0.7486.
2021-03-05 10:45:37 - automl.py - INFO - Model name                         |Train score                        |Validation score                   
2021-03-05 10:45:37 - automl.py - INFO - GradientBoostingTree-0.783719.pkl  |0.783719                           |0.793296                           
2021-03-05 10:45:37 - automl.py - INFO - DecisionTreeClassifier-0.786506.pkl|0.786506                           |0.782123                           
2021-03-05 10:45:37 - automl.py - INFO - AdaboostClassifier-0.780882.pkl    |0.780882                           |0.776536                           
2021-03-05 10:45:37 - automl.py - INFO - KNNClassifier-0.769654.pkl         |0.769654                           |0.776536                           
2021-03-05 10:45:37 - automl.py - INFO - LightGBMClassifier-0.785098.pkl    |0.785098                           |0.776536                           
2021-03-05 10:45:37 - automl.py - INFO - Stacking-0.846154.pkl              |0.846154                           |0.776536                           
2021-03-05 10:45:37 - automl.py - INFO - SupportVectorMachine-0.786487.pkl  |0.786487                           |0.776536                           
2021-03-05 10:45:37 - automl.py - INFO - LogisticRegression-0.80196.pkl     |0.80196                            |0.77095                            
2021-03-05 10:45:37 - automl.py - INFO - RandomForestClassifier-0.78368.pkl |0.78368                            |0.77095                            
2021-03-05 10:45:37 - automl.py - INFO - XGBClassifier-0.785108.pkl         |0.785108                           |0.765363                           
2021-03-05 10:45:37 - automl.py - INFO - DNN-0.755245.h5                    |0.755245                           |0.75419                            
2021-03-05 10:45:37 - automl.py - INFO - DNN-0.783217.h5                    |0.783217                           |0.748603                           
2021-03-05 10:45:37 - automl.py - INFO - DNN-0.699301.h5                    |0.699301                           |0.72067                            
2021-03-05 10:45:37 - automl.py - INFO - Whole training pipeline takes: 90.03 seconds!
2021-03-05 10:46:45 - logger - INFO - Start logging for `logger`
2021-03-05 10:46:45 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-05 10:46:45 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-05 10:46:46 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-05 10:46:46 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-05 10:46:46 - automl.py - INFO - Start logging for `automl.py`
2021-03-05 10:46:47 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-05 10:46:47 - pipeline_training.py - INFO - Get training algorithms: ['LogisticRegression', 'SupportVectorMachine', 'GradientBoostingTree', 'XGBClassifier', 'LightGBMClassifier', 'RandomForestClassifier', 'KNNClassifier', 'DecisionTreeClassifier', 'AdaboostClassifier']
2021-03-05 10:46:47 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-03-05 10:46:47 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-05 10:46:47 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-05 10:46:47 - pipeline_training.py - INFO - Start to transform training data.
2021-03-05 10:46:47 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-05 10:46:47 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-05 10:46:47 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-05 10:46:47 - pipeline_training.py - INFO - After processing, data shape: 17
2021-03-05 10:46:47 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-05 10:46:47 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-05 10:46:47 - model_selection.py - INFO - Train algorithm: LogisticRegression takes 0.5 seconds
2021-03-05 10:46:49 - model_selection.py - INFO - Train algorithm: SupportVectorMachine takes 1.86 seconds
2021-03-05 10:47:06 - model_selection.py - INFO - Train algorithm: GradientBoostingTree takes 17.14 seconds
2021-03-05 10:47:19 - model_selection.py - INFO - Train algorithm: XGBClassifier takes 12.72 seconds
2021-03-05 10:47:25 - model_selection.py - INFO - Train algorithm: LightGBMClassifier takes 6.22 seconds
2021-03-05 10:47:35 - model_selection.py - INFO - Train algorithm: RandomForestClassifier takes 9.27 seconds
2021-03-05 10:47:35 - model_selection.py - INFO - Train algorithm: KNNClassifier takes 0.15 seconds
2021-03-05 10:47:35 - model_selection.py - INFO - Train algorithm: DecisionTreeClassifier takes 0.05 seconds
2021-03-05 10:47:40 - model_selection.py - INFO - Train algorithm: AdaboostClassifier takes 4.69 seconds
2021-03-05 10:47:40 - model_selection.py - INFO - Model selection training has finished.
2021-03-05 10:47:40 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-05 10:47:40 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.79348
2021-03-05 10:47:40 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.779444
2021-03-05 10:47:40 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.782242
2021-03-05 10:47:40 - model_selection.py - INFO - Algorithm: XGBClassifier with score: 0.782242
2021-03-05 10:47:40 - model_selection.py - INFO - Algorithm: LightGBMClassifier with score: 0.771013
2021-03-05 10:47:40 - model_selection.py - INFO - Algorithm: RandomForestClassifier with score: 0.775229
2021-03-05 10:47:40 - model_selection.py - INFO - Algorithm: KNNClassifier with score: 0.787846
2021-03-05 10:47:40 - model_selection.py - INFO - Algorithm: DecisionTreeClassifier with score: 0.777997
2021-03-05 10:47:40 - model_selection.py - INFO - Algorithm: AdaboostClassifier with score: 0.766788
2021-03-05 10:47:40 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-05 10:47:40 - model_selection.py - INFO - Start to save model: LogisticRegression-0.79348
2021-03-05 10:47:40 - model_selection.py - INFO - Start to save model: KNNClassifier-0.787846
2021-03-05 10:47:40 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.782242
2021-03-05 10:47:40 - model_selection.py - INFO - Start to save model: XGBClassifier-0.782242
2021-03-05 10:47:40 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.779444
2021-03-05 10:47:40 - model_selection.py - INFO - Start to save model: DecisionTreeClassifier-0.777997
2021-03-05 10:47:40 - model_selection.py - INFO - Start to save model: RandomForestClassifier-0.775229
2021-03-05 10:47:40 - model_selection.py - INFO - Start to save model: LightGBMClassifier-0.771013
2021-03-05 10:47:40 - model_selection.py - INFO - Start to save model: AdaboostClassifier-0.766788
2021-03-05 10:47:40 - model_selection.py - INFO - Already have saved models: AdaboostClassifier-0.766788.pkl	DecisionTreeClassifier-0.777997.pkl	GradientBoostingTree-0.782242.pkl	KNNClassifier-0.787846.pkl	LightGBMClassifier-0.771013.pkl	LogisticRegression-0.79348.pkl	RandomForestClassifier-0.775229.pkl	SupportVectorMachine-0.779444.pkl	XGBClassifier-0.782242.pkl
2021-03-05 10:47:40 - pipeline_training.py - INFO - Training pipeline finished takes: 53 seconds.
2021-03-05 10:47:40 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-05 10:47:40 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-05 10:47:40 - model_ensemble.py - INFO - To get prediction for estimator: AdaboostClassifier
2021-03-05 10:47:40 - model_ensemble.py - INFO - To get prediction for estimator: DecisionTreeClassifier
2021-03-05 10:47:40 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-05 10:47:40 - model_ensemble.py - INFO - To get prediction for estimator: KNNClassifier
2021-03-05 10:47:40 - model_ensemble.py - INFO - To get prediction for estimator: LightGBMClassifier
2021-03-05 10:47:40 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-05 10:47:40 - model_ensemble.py - INFO - To get prediction for estimator: RandomForestClassifier
2021-03-05 10:47:40 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-05 10:47:40 - model_ensemble.py - INFO - To get prediction for estimator: XGBClassifier
2021-03-05 10:47:40 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :26
2021-03-05 10:47:41 - model_ensemble.py - INFO - Stacking model score: 0.762238
2021-03-05 10:47:41 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-05 10:47:41 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-05 10:47:41 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-05 10:47:41 - neural_network_search.py - INFO - Get 2 classes problem.
2021-03-05 10:47:41 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-05 10:47:41 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-05 10:47:41 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-05 10:48:07 - neural_network_search.py - INFO - Get best scores are: [0.832168	0.783217	0.748252	0.741259	0.699301]
2021-03-05 10:48:07 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-05 10:48:08 - neural_network_search.py - INFO - Try to clean serach model space folder: WJEaNFTHCF
2021-03-05 10:48:08 - neural_network_search.py - INFO - Folder: WJEaNFTHCF has been deleted!
2021-03-05 10:48:08 - neural_network_search.py - INFO - Whole fitting logic finished used 27.164319276809692 seconds.
2021-03-05 10:48:08 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-05 10:48:09 - pipeline_training.py - INFO - Get model list: AdaboostClassifier-0.766788.pkl	DecisionTreeClassifier-0.777997.pkl	GradientBoostingTree-0.782242.pkl	KNNClassifier-0.787846.pkl	LightGBMClassifier-0.771013.pkl	LogisticRegression-0.79348.pkl	RandomForestClassifier-0.775229.pkl	Stacking-0.762238.pkl	SupportVectorMachine-0.779444.pkl	XGBClassifier-0.782242.pkl	DNN-0.699301.h5	DNN-0.741259.h5	DNN-0.748252.h5	DNN-0.783217.h5	DNN-0.832168.h5
2021-03-05 10:48:09 - pipeline_training.py - INFO - Start to get model score for model: AdaboostClassifier(learning_rate=0.7155750067130712, n_estimators=70).
2021-03-05 10:48:09 - pipeline_training.py - INFO - Model: AdaboostClassifier(learning_rate=0.7155750067130712, n_estimators=70) get score: 0.7821.
2021-03-05 10:48:09 - pipeline_training.py - INFO - Start to get model score for model: DecisionTreeClassifier(max_depth=10).
2021-03-05 10:48:09 - pipeline_training.py - INFO - Model: DecisionTreeClassifier(max_depth=10) get score: 0.8101.
2021-03-05 10:48:09 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.803853455759669).
2021-03-05 10:48:09 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.803853455759669) get score: 0.7709.
2021-03-05 10:48:09 - pipeline_training.py - INFO - Start to get model score for model: KNNClassifier(n_neighbors=10).
2021-03-05 10:48:09 - pipeline_training.py - INFO - Model: KNNClassifier(n_neighbors=10) get score: 0.7654.
2021-03-05 10:48:09 - pipeline_training.py - INFO - Start to get model score for model: LightGBMClassifier(learning_rate=0.5059851742682241).
2021-03-05 10:48:09 - pipeline_training.py - INFO - Model: LightGBMClassifier(learning_rate=0.5059851742682241) get score: 0.7765.
2021-03-05 10:48:09 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=1.9960425587510338).
2021-03-05 10:48:09 - pipeline_training.py - INFO - Model: LogisticRegression(C=1.9960425587510338) get score: 0.7989.
2021-03-05 10:48:09 - pipeline_training.py - INFO - Start to get model score for model: RandomForestClassifier(n_estimators=300).
2021-03-05 10:48:09 - pipeline_training.py - INFO - Model: RandomForestClassifier(n_estimators=300) get score: 0.7765.
2021-03-05 10:48:09 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-03-05 10:48:09 - pipeline_training.py - INFO - Start to get model score for model: AdaboostClassifier().
2021-03-05 10:48:10 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-05 10:48:10 - model_ensemble.py - INFO - To get prediction for estimator: AdaboostClassifier
2021-03-05 10:48:10 - model_ensemble.py - INFO - To get prediction for estimator: DecisionTreeClassifier
2021-03-05 10:48:10 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-05 10:48:10 - model_ensemble.py - INFO - To get prediction for estimator: KNNClassifier
2021-03-05 10:48:10 - model_ensemble.py - INFO - To get prediction for estimator: LightGBMClassifier
2021-03-05 10:48:10 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-05 10:48:10 - model_ensemble.py - INFO - To get prediction for estimator: RandomForestClassifier
2021-03-05 10:48:10 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-05 10:48:10 - model_ensemble.py - INFO - To get prediction for estimator: XGBClassifier
2021-03-05 10:48:10 - pipeline_training.py - INFO - Model: AdaboostClassifier() get score: 0.7989.
2021-03-05 10:48:10 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=2.7986667922981523).
2021-03-05 10:48:10 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=2.7986667922981523) get score: 0.7877.
2021-03-05 10:48:10 - pipeline_training.py - INFO - Start to get model score for model: XGBClassifier(learning_rate=0.8771733083946738, n_estimators=300).
2021-03-05 10:48:10 - pipeline_training.py - INFO - Model: XGBClassifier(learning_rate=0.8771733083946738, n_estimators=300) get score: 0.7709.
2021-03-05 10:48:10 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000001EC5DA5F470>.
2021-03-05 10:48:10 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000001EC5DA5F470> get score: 0.6425.
2021-03-05 10:48:10 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000001EC6A3C8BE0>.
2021-03-05 10:48:10 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000001EC6A3C8BE0> get score: 0.6536.
2021-03-05 10:48:10 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000001EC6A48E550>.
2021-03-05 10:48:10 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000001EC6A48E550> get score: 0.6983.
2021-03-05 10:48:10 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000001EC6A4F0E10>.
2021-03-05 10:48:10 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000001EC6A4F0E10> get score: 0.7318.
2021-03-05 10:48:10 - pipeline_training.py - INFO - Start to get model score for model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000001EC6A2C2EB8>.
2021-03-05 10:48:10 - pipeline_training.py - INFO - Model: <tensorflow.python.keras.engine.sequential.Sequential object at 0x000001EC6A2C2EB8> get score: 0.7709.
2021-03-05 10:48:10 - automl.py - INFO - Model name                         |Train score                        |Validation score                   
2021-03-05 10:48:10 - automl.py - INFO - DecisionTreeClassifier-0.777997.pkl|0.777997                           |0.810056                           
2021-03-05 10:48:10 - automl.py - INFO - LogisticRegression-0.79348.pkl     |0.79348                            |0.798883                           
2021-03-05 10:48:10 - automl.py - INFO - Stacking-0.762238.pkl              |0.762238                           |0.798883                           
2021-03-05 10:48:10 - automl.py - INFO - SupportVectorMachine-0.779444.pkl  |0.779444                           |0.787709                           
2021-03-05 10:48:10 - automl.py - INFO - AdaboostClassifier-0.766788.pkl    |0.766788                           |0.782123                           
2021-03-05 10:48:10 - automl.py - INFO - LightGBMClassifier-0.771013.pkl    |0.771013                           |0.776536                           
2021-03-05 10:48:10 - automl.py - INFO - RandomForestClassifier-0.775229.pkl|0.775229                           |0.776536                           
2021-03-05 10:48:10 - automl.py - INFO - GradientBoostingTree-0.782242.pkl  |0.782242                           |0.77095                            
2021-03-05 10:48:10 - automl.py - INFO - XGBClassifier-0.782242.pkl         |0.782242                           |0.77095                            
2021-03-05 10:48:10 - automl.py - INFO - DNN-0.832168.h5                    |0.832168                           |0.77095                            
2021-03-05 10:48:10 - automl.py - INFO - KNNClassifier-0.787846.pkl         |0.787846                           |0.765363                           
2021-03-05 10:48:10 - automl.py - INFO - DNN-0.783217.h5                    |0.783217                           |0.731844                           
2021-03-05 10:48:10 - automl.py - INFO - DNN-0.748252.h5                    |0.748252                           |0.698324                           
2021-03-05 10:48:10 - automl.py - INFO - DNN-0.741259.h5                    |0.741259                           |0.653631                           
2021-03-05 10:48:10 - automl.py - INFO - DNN-0.699301.h5                    |0.699301                           |0.642458                           
2021-03-05 10:48:10 - automl.py - INFO - Whole training pipeline takes: 83.59 seconds!
2021-03-05 14:16:51 - logger - INFO - Start logging for `logger`
2021-03-05 14:16:52 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-05 14:16:52 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-05 14:16:52 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-05 14:16:52 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-05 14:16:52 - automl.py - INFO - Start logging for `automl.py`
2021-03-05 14:17:29 - logger - INFO - Start logging for `logger`
2021-03-05 14:17:30 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-05 14:17:30 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-05 14:17:30 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-05 14:17:30 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-05 14:17:30 - automl.py - INFO - Start logging for `automl.py`
2021-03-05 14:19:28 - logger - INFO - Start logging for `logger`
2021-03-05 14:19:28 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-05 14:19:28 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-05 14:19:29 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-05 14:19:29 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-05 14:19:29 - automl.py - INFO - Start logging for `automl.py`
2021-03-05 14:19:29 - logger - WARNING - There isn't any trained models in folder: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\models
2021-03-05 14:19:29 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-05 14:19:29 - pipeline_training.py - INFO - Get training algorithms: ['LogisticRegression', 'SupportVectorMachine', 'GradientBoostingTree', 'XGBClassifier', 'LightGBMClassifier', 'RandomForestClassifier', 'KNNClassifier', 'DecisionTreeClassifier', 'AdaboostClassifier']
2021-03-05 14:19:29 - pipeline_training.py - INFO - Before processing, data shape: 4
2021-03-05 14:19:29 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-05 14:19:29 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-05 14:19:29 - pipeline_training.py - INFO - Start to transform training data.
2021-03-05 14:19:29 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-05 14:19:29 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-05 14:19:29 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-05 14:19:29 - pipeline_training.py - INFO - After processing, data shape: 3
2021-03-05 14:19:29 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-05 14:19:29 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-05 14:19:29 - model_selection.py - INFO - GridSearch for algorithm: LogisticRegression takes 0.25 seconds
2021-03-05 14:19:29 - model_selection.py - INFO - GridSearch for algorithm: SupportVectorMachine takes 0.09 seconds
2021-03-05 14:19:48 - model_selection.py - INFO - GridSearch for algorithm: GradientBoostingTree takes 18.85 seconds
2021-03-05 14:19:55 - model_selection.py - INFO - GridSearch for algorithm: XGBClassifier takes 7.05 seconds
2021-03-05 14:19:56 - model_selection.py - INFO - GridSearch for algorithm: LightGBMClassifier takes 1.25 seconds
2021-03-05 14:20:04 - model_selection.py - INFO - GridSearch for algorithm: RandomForestClassifier takes 7.17 seconds
2021-03-05 14:20:04 - model_selection.py - INFO - GridSearch for algorithm: KNNClassifier takes 0.04 seconds
2021-03-05 14:20:04 - model_selection.py - INFO - GridSearch for algorithm: DecisionTreeClassifier takes 0.03 seconds
2021-03-05 14:20:07 - model_selection.py - INFO - GridSearch for algorithm: AdaboostClassifier takes 3.74 seconds
2021-03-05 14:20:07 - model_selection.py - INFO - Model selection training has finished.
2021-03-05 14:20:07 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-05 14:20:07 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.95
2021-03-05 14:20:07 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.95
2021-03-05 14:20:07 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.916667
2021-03-05 14:20:07 - model_selection.py - INFO - Algorithm: XGBClassifier with score: 0.925
2021-03-05 14:20:07 - model_selection.py - INFO - Algorithm: LightGBMClassifier with score: 0.916667
2021-03-05 14:20:07 - model_selection.py - INFO - Algorithm: RandomForestClassifier with score: 0.916667
2021-03-05 14:20:07 - model_selection.py - INFO - Algorithm: KNNClassifier with score: 0.958333
2021-03-05 14:20:07 - model_selection.py - INFO - Algorithm: DecisionTreeClassifier with score: 0.908333
2021-03-05 14:20:07 - model_selection.py - INFO - Algorithm: AdaboostClassifier with score: 0.775
2021-03-05 14:20:07 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-05 14:20:07 - model_selection.py - INFO - Start to save model: KNNClassifier-0.958333
2021-03-05 14:20:07 - model_selection.py - INFO - Start to save model: LogisticRegression-0.95
2021-03-05 14:20:07 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.95
2021-03-05 14:20:07 - model_selection.py - INFO - Start to save model: XGBClassifier-0.925
2021-03-05 14:20:07 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.916667
2021-03-05 14:20:07 - model_selection.py - INFO - Start to save model: LightGBMClassifier-0.916667
2021-03-05 14:20:07 - model_selection.py - INFO - Start to save model: RandomForestClassifier-0.916667
2021-03-05 14:20:07 - model_selection.py - INFO - Start to save model: DecisionTreeClassifier-0.908333
2021-03-05 14:20:07 - model_selection.py - INFO - Start to save model: AdaboostClassifier-0.775
2021-03-05 14:20:07 - model_selection.py - INFO - Already have saved models: AdaboostClassifier-0.775.pkl	DecisionTreeClassifier-0.908333.pkl	GradientBoostingTree-0.916667.pkl	KNNClassifier-0.958333.pkl	LightGBMClassifier-0.916667.pkl	LogisticRegression-0.95.pkl	RandomForestClassifier-0.916667.pkl	SupportVectorMachine-0.95.pkl	XGBClassifier-0.925.pkl
2021-03-05 14:20:07 - pipeline_training.py - INFO - Training pipeline finished takes: 39 seconds.
2021-03-05 14:20:08 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-05 14:20:08 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-05 14:20:08 - model_ensemble.py - INFO - To get prediction for estimator: AdaboostClassifier
2021-03-05 14:20:08 - model_ensemble.py - INFO - To get prediction for estimator: DecisionTreeClassifier
2021-03-05 14:20:08 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-05 14:20:08 - model_ensemble.py - INFO - To get prediction for estimator: KNNClassifier
2021-03-05 14:20:08 - model_ensemble.py - INFO - To get prediction for estimator: LightGBMClassifier
2021-03-05 14:20:08 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-05 14:20:08 - model_ensemble.py - INFO - To get prediction for estimator: RandomForestClassifier
2021-03-05 14:20:08 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-05 14:20:08 - model_ensemble.py - INFO - To get prediction for estimator: XGBClassifier
2021-03-05 14:20:08 - model_ensemble.py - INFO - Before stacking we have data dimention: 3, after stacking we have :12
2021-03-05 14:20:08 - model_ensemble.py - INFO - Stacking model score: 1.0
2021-03-05 14:20:08 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-05 14:20:08 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-05 14:20:08 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-05 14:20:08 - neural_network_search.py - INFO - Get 3 classes problem.
2021-03-05 14:20:08 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-05 14:20:08 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-05 14:20:09 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-05 14:20:32 - neural_network_search.py - INFO - Get best scores are: [0.958333	0.916667	0.833333	0.833333	0.75]
2021-03-05 14:20:32 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-05 14:20:33 - neural_network_search.py - INFO - Try to clean serach model space folder: vMqFvnWGgd
2021-03-05 14:20:33 - neural_network_search.py - INFO - Folder: vMqFvnWGgd has been deleted!
2021-03-05 14:20:33 - neural_network_search.py - INFO - Whole fitting logic finished used 24.23716115951538 seconds.
2021-03-05 14:20:33 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-05 14:20:33 - automl.py - WARNING - No need to validation!
2021-03-05 14:20:33 - automl.py - INFO - Whole training pipeline takes: 64.56 seconds!
2021-03-05 14:22:46 - logger - INFO - Start logging for `logger`
2021-03-05 14:22:46 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-03-05 14:22:47 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-03-05 14:22:47 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-03-05 14:22:47 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-03-05 14:22:47 - automl.py - INFO - Start logging for `automl.py`
2021-03-05 14:22:49 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-03-05 14:22:49 - pipeline_training.py - INFO - Get training algorithms: ['LogisticRegression', 'SupportVectorMachine', 'GradientBoostingTree', 'XGBClassifier', 'LightGBMClassifier', 'RandomForestClassifier', 'KNNClassifier', 'DecisionTreeClassifier', 'AdaboostClassifier']
2021-03-05 14:22:49 - pipeline_training.py - INFO - Before processing, data shape: 4
2021-03-05 14:22:49 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-03-05 14:22:49 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-03-05 14:22:49 - pipeline_training.py - INFO - Start to transform training data.
2021-03-05 14:22:49 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-03-05 14:22:49 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-03-05 14:22:49 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-03-05 14:22:49 - pipeline_training.py - INFO - After processing, data shape: 3
2021-03-05 14:22:49 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-03-05 14:22:49 - model_selection.py - INFO - Start to train model based on whole cores.
2021-03-05 14:22:49 - model_selection.py - INFO - GridSearch for algorithm: LogisticRegression takes 0.41 seconds
2021-03-05 14:22:49 - model_selection.py - INFO - GridSearch for algorithm: SupportVectorMachine takes 0.15 seconds
2021-03-05 14:23:17 - model_selection.py - INFO - GridSearch for algorithm: GradientBoostingTree takes 27.55 seconds
2021-03-05 14:23:27 - model_selection.py - INFO - GridSearch for algorithm: XGBClassifier takes 10.67 seconds
2021-03-05 14:23:30 - model_selection.py - INFO - GridSearch for algorithm: LightGBMClassifier takes 2.5 seconds
2021-03-05 14:23:40 - model_selection.py - INFO - GridSearch for algorithm: RandomForestClassifier takes 9.69 seconds
2021-03-05 14:23:40 - model_selection.py - INFO - GridSearch for algorithm: KNNClassifier takes 0.07 seconds
2021-03-05 14:23:40 - model_selection.py - INFO - GridSearch for algorithm: DecisionTreeClassifier takes 0.03 seconds
2021-03-05 14:23:43 - model_selection.py - INFO - GridSearch for algorithm: AdaboostClassifier takes 3.72 seconds
2021-03-05 14:23:43 - model_selection.py - INFO - Model selection training has finished.
2021-03-05 14:23:43 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-03-05 14:23:43 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.966667
2021-03-05 14:23:43 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.941667
2021-03-05 14:23:43 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.966667
2021-03-05 14:23:43 - model_selection.py - INFO - Algorithm: XGBClassifier with score: 0.958333
2021-03-05 14:23:43 - model_selection.py - INFO - Algorithm: LightGBMClassifier with score: 0.95
2021-03-05 14:23:43 - model_selection.py - INFO - Algorithm: RandomForestClassifier with score: 0.95
2021-03-05 14:23:43 - model_selection.py - INFO - Algorithm: KNNClassifier with score: 0.958333
2021-03-05 14:23:43 - model_selection.py - INFO - Algorithm: DecisionTreeClassifier with score: 0.958333
2021-03-05 14:23:43 - model_selection.py - INFO - Algorithm: AdaboostClassifier with score: 0.741667
2021-03-05 14:23:43 - model_selection.py - INFO - Start to save best selected models into disk.
2021-03-05 14:23:43 - model_selection.py - INFO - Start to save model: LogisticRegression-0.966667
2021-03-05 14:23:43 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.966667
2021-03-05 14:23:43 - model_selection.py - INFO - Start to save model: XGBClassifier-0.958333
2021-03-05 14:23:43 - model_selection.py - INFO - Start to save model: KNNClassifier-0.958333
2021-03-05 14:23:43 - model_selection.py - INFO - Start to save model: DecisionTreeClassifier-0.958333
2021-03-05 14:23:43 - model_selection.py - INFO - Start to save model: LightGBMClassifier-0.95
2021-03-05 14:23:43 - model_selection.py - INFO - Start to save model: RandomForestClassifier-0.95
2021-03-05 14:23:43 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.941667
2021-03-05 14:23:44 - model_selection.py - INFO - Start to save model: AdaboostClassifier-0.741667
2021-03-05 14:23:44 - model_selection.py - INFO - Already have saved models: AdaboostClassifier-0.741667.pkl	DecisionTreeClassifier-0.958333.pkl	GradientBoostingTree-0.966667.pkl	KNNClassifier-0.958333.pkl	LightGBMClassifier-0.95.pkl	LogisticRegression-0.966667.pkl	RandomForestClassifier-0.95.pkl	SupportVectorMachine-0.941667.pkl	XGBClassifier-0.958333.pkl
2021-03-05 14:23:44 - pipeline_training.py - INFO - Training pipeline finished takes: 55 seconds.
2021-03-05 14:23:44 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-03-05 14:23:44 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-03-05 14:23:44 - model_ensemble.py - INFO - To get prediction for estimator: AdaboostClassifier
2021-03-05 14:23:44 - model_ensemble.py - INFO - To get prediction for estimator: DecisionTreeClassifier
2021-03-05 14:23:44 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-03-05 14:23:44 - model_ensemble.py - INFO - To get prediction for estimator: KNNClassifier
2021-03-05 14:23:44 - model_ensemble.py - INFO - To get prediction for estimator: LightGBMClassifier
2021-03-05 14:23:44 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-03-05 14:23:44 - model_ensemble.py - INFO - To get prediction for estimator: RandomForestClassifier
2021-03-05 14:23:44 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-03-05 14:23:44 - model_ensemble.py - INFO - To get prediction for estimator: XGBClassifier
2021-03-05 14:23:44 - model_ensemble.py - INFO - Before stacking we have data dimention: 3, after stacking we have :12
2021-03-05 14:23:44 - model_ensemble.py - INFO - Stacking model score: 1.0
2021-03-05 14:23:44 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-03-05 14:23:44 - pipeline_training.py - INFO - End Model Pipeline training.
2021-03-05 14:23:44 - pipeline_training.py - INFO - Start to use Nueral Network to fit data with `tuner`!
2021-03-05 14:23:44 - neural_network_search.py - INFO - Get 3 classes problem.
2021-03-05 14:23:44 - neural_network_search.py - INFO - Start to get model instance for algorithms: [DNN]
2021-03-05 14:23:44 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-03-05 14:23:44 - neural_network_search.py - INFO - Start to search neural network models.
2021-03-05 14:24:30 - neural_network_search.py - INFO - Get best scores are: [0.791667	0.791667	0.75	0.708333	0.708333]
2021-03-05 14:24:30 - neural_network_search.py - INFO - Start to save best trained nueral networks models into disk.
2021-03-05 14:24:33 - neural_network_search.py - INFO - Try to clean serach model space folder: eXBmEyzLvo
2021-03-05 14:24:35 - neural_network_search.py - INFO - Folder: eXBmEyzLvo has been deleted!
2021-03-05 14:24:35 - neural_network_search.py - INFO - Whole fitting logic finished used 50.69876050949097 seconds.
2021-03-05 14:24:35 - pipeline_training.py - INFO - Finished Nueral Network search logic!
2021-03-05 14:24:38 - automl.py - WARNING - No need to validation!
2021-03-05 14:24:38 - automl.py - INFO - Whole training pipeline takes: 109.43 seconds!
2021-03-05 14:24:39 - automl.py - INFO - Start to get prediction based on best trained model!
2021-03-05 14:24:39 - pipeline_training.py - INFO - Start to get model score for model: <auto_ml.base.model_selection.GridSearchModel object at 0x000002129230F6A0>.
2021-03-05 14:24:39 - pipeline_training.py - INFO - Model: <auto_ml.base.model_selection.GridSearchModel object at 0x000002129230F6A0> get score: 1.0000.
2021-03-05 14:24:39 - automl.py - INFO - Get score: 1.0 based on best model!
2021-03-05 14:24:39 - automl.py - INFO - Start to get prediction based on best trained model.
2021-03-05 14:24:39 - automl.py - INFO - Prediction step finishes.
2021-03-05 14:24:39 - automl.py - INFO - Start to get probability based on best trained model.
2021-03-05 14:24:39 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-03-05 14:24:39 - automl.py - INFO - Prediction step finishes.
