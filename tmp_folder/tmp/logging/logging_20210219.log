2021-02-19 16:38:53 - logger - INFO - Start logging for `logger`
2021-02-19 16:38:53 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-02-19 16:40:15 - logger - INFO - Start logging for `logger`
2021-02-19 16:40:16 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-02-19 16:40:16 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-02-19 16:40:16 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-02-19 16:40:16 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-02-19 16:40:16 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-02-19 16:40:16 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-02-19 16:40:16 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-02-19 16:40:16 - pipeline_training.py - INFO - Start to transform training data.
2021-02-19 16:40:16 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-02-19 16:40:16 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-02-19 16:40:16 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-02-19 16:40:16 - pipeline_training.py - INFO - After processing, data shape: 16
2021-02-19 16:40:16 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-02-19 16:40:16 - model_selection.py - INFO - Start to train model based on whole cores.
2021-02-19 16:40:30 - model_selection.py - INFO - Model selection training has finished.
2021-02-19 16:40:30 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-02-19 16:40:30 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.79213
2021-02-19 16:40:30 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.796316
2021-02-19 16:40:30 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.789274
2021-02-19 16:40:30 - model_selection.py - INFO - Start to save best selected models into disk.
2021-02-19 16:40:30 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.796316
2021-02-19 16:40:30 - model_selection.py - INFO - Start to save model: LogisticRegression-0.79213
2021-02-19 16:40:30 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.789274
2021-02-19 16:40:30 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.789274.pkl	LogisticRegression-0.79213.pkl	SupportVectorMachine-0.796316.pkl
2021-02-19 16:40:30 - pipeline_training.py - INFO - Training pipeline finished takes: 14 seconds.
2021-02-19 16:40:30 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-02-19 16:40:30 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-02-19 16:40:30 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-02-19 16:40:30 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-02-19 16:40:30 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-02-19 16:40:30 - model_ensemble.py - INFO - Before stacking we have data dimention: 16, after stacking we have :19
2021-02-19 16:40:31 - model_ensemble.py - INFO - Stacking model score: 0.832168
2021-02-19 16:40:31 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-02-19 16:40:31 - pipeline_training.py - INFO - End Model Pipeline training.
2021-02-19 16:40:31 - pipeline_training.py - INFO - Start to get model score for model: <auto_ml.base.model_selection.GridSearchModel object at 0x0000026153243390>.
2021-02-19 16:40:31 - pipeline_training.py - INFO - Model: <auto_ml.base.model_selection.GridSearchModel object at 0x0000026153243390> get score: 0.7654.
2021-02-19 16:40:31 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.789274.pkl	LogisticRegression-0.79213.pkl	Stacking-0.832168.pkl	SupportVectorMachine-0.796316.pkl
2021-02-19 16:40:31 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.16902236824112507).
2021-02-19 16:40:31 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.16902236824112507) get score: 0.7654.
2021-02-19 16:40:31 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=1).
2021-02-19 16:40:31 - pipeline_training.py - INFO - Model: LogisticRegression(C=1) get score: 0.7318.
2021-02-19 16:40:31 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-02-19 16:40:31 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-02-19 16:40:31 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-02-19 16:40:31 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-02-19 16:40:31 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-02-19 16:40:31 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-02-19 16:40:31 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.7654.
2021-02-19 16:40:32 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=8.169602203942867).
2021-02-19 16:40:32 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=8.169602203942867) get score: 0.7654.
2021-02-19 16:41:03 - logger - INFO - Start logging for `logger`
2021-02-19 16:41:04 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-02-19 16:41:04 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-02-19 16:41:04 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-02-19 16:42:20 - logger - INFO - Start logging for `logger`
2021-02-19 16:42:20 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-02-19 16:42:20 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-02-19 16:42:20 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-02-19 16:43:01 - logger - INFO - Start logging for `logger`
2021-02-19 16:43:02 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-02-19 16:43:02 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-02-19 16:43:02 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-02-19 16:43:02 - automl.py - INFO - Start logging for `automl.py`
2021-02-19 16:43:02 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-02-19 16:43:02 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-02-19 16:43:02 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-02-19 16:43:02 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-02-19 16:43:02 - pipeline_training.py - INFO - Start to transform training data.
2021-02-19 16:43:02 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-02-19 16:43:02 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-02-19 16:43:02 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-02-19 16:43:02 - pipeline_training.py - INFO - After processing, data shape: 17
2021-02-19 16:43:02 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-02-19 16:43:02 - model_selection.py - INFO - Start to train model based on whole cores.
2021-02-19 16:43:18 - model_selection.py - INFO - Model selection training has finished.
2021-02-19 16:43:18 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-02-19 16:43:18 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.780823
2021-02-19 16:43:18 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.794869
2021-02-19 16:43:18 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.799123
2021-02-19 16:43:18 - model_selection.py - INFO - Start to save best selected models into disk.
2021-02-19 16:43:18 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.799123
2021-02-19 16:43:18 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.794869
2021-02-19 16:43:18 - model_selection.py - INFO - Start to save model: LogisticRegression-0.780823
2021-02-19 16:43:18 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.799123.pkl	LogisticRegression-0.780823.pkl	SupportVectorMachine-0.794869.pkl
2021-02-19 16:43:18 - pipeline_training.py - INFO - Training pipeline finished takes: 16 seconds.
2021-02-19 16:43:18 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-02-19 16:43:18 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-02-19 16:43:18 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-02-19 16:43:18 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-02-19 16:43:18 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-02-19 16:43:18 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-02-19 16:43:19 - model_ensemble.py - INFO - Stacking model score: 0.79021
2021-02-19 16:43:19 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-02-19 16:43:19 - pipeline_training.py - INFO - End Model Pipeline training.
2021-02-19 16:43:19 - automl.py - INFO - Start to get prediction based on best trained model!
2021-02-19 16:43:19 - pipeline_training.py - INFO - Start to get model score for model: <auto_ml.base.model_selection.GridSearchModel object at 0x000001A6490736D8>.
2021-02-19 16:43:19 - pipeline_training.py - INFO - Model: <auto_ml.base.model_selection.GridSearchModel object at 0x000001A6490736D8> get score: 0.7765.
2021-02-19 16:43:19 - automl.py - INFO - Get score: 0.776536312849162 based on best model!
2021-02-19 16:43:19 - automl.py - INFO - Start to get prediction based on best trained model.
2021-02-19 16:43:19 - automl.py - INFO - Prediction step finishes.
2021-02-19 16:43:19 - automl.py - INFO - Start to get probability based on best trained model.
2021-02-19 16:43:19 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-02-19 16:43:19 - automl.py - INFO - Prediction step finishes.
2021-02-19 16:43:19 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.799123.pkl	LogisticRegression-0.780823.pkl	Stacking-0.79021.pkl	SupportVectorMachine-0.794869.pkl
2021-02-19 16:43:19 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.011208396094570992, n_estimators=300).
2021-02-19 16:43:19 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.011208396094570992, n_estimators=300) get score: 0.7765.
2021-02-19 16:43:19 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=6.79428114034815).
2021-02-19 16:43:19 - pipeline_training.py - INFO - Model: LogisticRegression(C=6.79428114034815) get score: 0.7989.
2021-02-19 16:43:19 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-02-19 16:43:19 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-02-19 16:43:19 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-02-19 16:43:19 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-02-19 16:43:19 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-02-19 16:43:19 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-02-19 16:43:19 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.7765.
2021-02-19 16:43:19 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=0.2148884008729503).
2021-02-19 16:43:19 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=0.2148884008729503) get score: 0.8268.
2021-02-19 16:43:27 - logger - INFO - Start logging for `logger`
2021-02-19 16:43:28 - model_selection.py - INFO - Start logging for `model_selection.py`
2021-02-19 16:43:28 - model_ensemble.py - INFO - Start logging for `model_ensemble.py`
2021-02-19 16:43:28 - pipeline_training.py - INFO - Start logging for `pipeline_training.py`
2021-02-19 16:43:28 - automl.py - INFO - Start logging for `automl.py`
2021-02-19 16:43:28 - pipeline_training.py - INFO - Start Model Pipeline training!
2021-02-19 16:43:28 - pipeline_training.py - INFO - Before processing, data shape: 11
2021-02-19 16:43:28 - pipeline_training.py - INFO - Whole process pipeline steps: Imputation	OnehotEncoding	Standard	PrincipalComponentAnalysis
2021-02-19 16:43:28 - pipeline_training.py - INFO - Start to do pre-processing step.
2021-02-19 16:43:28 - pipeline_training.py - INFO - Start to transform training data.
2021-02-19 16:43:28 - pipeline_training.py - INFO - Start to save the processor object and processed data into disk.
2021-02-19 16:43:28 - pipeline_training.py - INFO - Start to save processed data into disk!
2021-02-19 16:43:28 - logger - INFO - Dataset: processed_data has been saved into: C:/Users/guangqiiang.lu/Documents/lugq/code_for_future/auto_ml_pro/auto_ml/tmp_folder\tmp\processed_data.csv
2021-02-19 16:43:28 - pipeline_training.py - INFO - After processing, data shape: 17
2021-02-19 16:43:28 - pipeline_training.py - INFO - Start to do pipeline training step.
2021-02-19 16:43:28 - model_selection.py - INFO - Start to train model based on whole cores.
2021-02-19 16:43:44 - model_selection.py - INFO - Model selection training has finished.
2021-02-19 16:43:44 - model_selection.py - INFO - Get some best model scores information based on model_selection module.
2021-02-19 16:43:44 - model_selection.py - INFO - Algorithm: LogisticRegression with score: 0.796395
2021-02-19 16:43:44 - model_selection.py - INFO - Algorithm: SupportVectorMachine with score: 0.80196
2021-02-19 16:43:44 - model_selection.py - INFO - Algorithm: GradientBoostingTree with score: 0.81179
2021-02-19 16:43:44 - model_selection.py - INFO - Start to save best selected models into disk.
2021-02-19 16:43:44 - model_selection.py - INFO - Start to save model: GradientBoostingTree-0.81179
2021-02-19 16:43:44 - model_selection.py - INFO - Start to save model: SupportVectorMachine-0.80196
2021-02-19 16:43:44 - model_selection.py - INFO - Start to save model: LogisticRegression-0.796395
2021-02-19 16:43:44 - model_selection.py - INFO - Already have saved models: GradientBoostingTree-0.81179.pkl	LogisticRegression-0.796395.pkl	SupportVectorMachine-0.80196.pkl
2021-02-19 16:43:44 - pipeline_training.py - INFO - Training pipeline finished takes: 16 seconds.
2021-02-19 16:43:44 - pipeline_training.py - INFO - We are going to use `ensemble` logic to combine models!
2021-02-19 16:43:44 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-02-19 16:43:44 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-02-19 16:43:44 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-02-19 16:43:44 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-02-19 16:43:44 - model_ensemble.py - INFO - Before stacking we have data dimention: 17, after stacking we have :20
2021-02-19 16:43:45 - model_ensemble.py - INFO - Stacking model score: 0.839161
2021-02-19 16:43:45 - pipeline_training.py - INFO - `Ensemble` training pipeline finished takes: 1 seconds.
2021-02-19 16:43:45 - pipeline_training.py - INFO - End Model Pipeline training.
2021-02-19 16:43:45 - automl.py - INFO - Start to get prediction based on best trained model!
2021-02-19 16:43:45 - pipeline_training.py - INFO - Start to get model score for model: <auto_ml.base.model_selection.GridSearchModel object at 0x000001F5692AA2E8>.
2021-02-19 16:43:45 - pipeline_training.py - INFO - Model: <auto_ml.base.model_selection.GridSearchModel object at 0x000001F5692AA2E8> get score: 0.7654.
2021-02-19 16:43:45 - automl.py - INFO - Get score: 0.7653631284916201 based on best model!
2021-02-19 16:43:45 - automl.py - INFO - Start to get prediction based on best trained model.
2021-02-19 16:43:45 - automl.py - INFO - Prediction step finishes.
2021-02-19 16:43:45 - automl.py - INFO - Start to get probability based on best trained model.
2021-02-19 16:43:45 - pipeline_training.py - INFO - Start to get model probability prediction based on trained model
2021-02-19 16:43:45 - automl.py - INFO - Prediction step finishes.
2021-02-19 16:43:45 - pipeline_training.py - INFO - Get model list: GradientBoostingTree-0.81179.pkl	LogisticRegression-0.796395.pkl	Stacking-0.839161.pkl	SupportVectorMachine-0.80196.pkl
2021-02-19 16:43:45 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree(learning_rate=0.3858064565638028, n_estimators=500).
2021-02-19 16:43:45 - pipeline_training.py - INFO - Model: GradientBoostingTree(learning_rate=0.3858064565638028, n_estimators=500) get score: 0.7654.
2021-02-19 16:43:45 - pipeline_training.py - INFO - Start to get model score for model: LogisticRegression(C=4.954648491737927).
2021-02-19 16:43:45 - pipeline_training.py - INFO - Model: LogisticRegression(C=4.954648491737927) get score: 0.7821.
2021-02-19 16:43:45 - pipeline_training.py - INFO - Get `Ensemble` processing data to get score for testing data.
2021-02-19 16:43:45 - pipeline_training.py - INFO - Start to get model score for model: GradientBoostingTree().
2021-02-19 16:43:45 - model_ensemble.py - INFO - Start to get trained model prediction for `stacking`
2021-02-19 16:43:45 - model_ensemble.py - INFO - To get prediction for estimator: GradientBoostingTree
2021-02-19 16:43:45 - model_ensemble.py - INFO - To get prediction for estimator: LogisticRegression
2021-02-19 16:43:45 - model_ensemble.py - INFO - To get prediction for estimator: SupportVectorMachine
2021-02-19 16:43:45 - pipeline_training.py - INFO - Model: GradientBoostingTree() get score: 0.7821.
2021-02-19 16:43:45 - pipeline_training.py - INFO - Start to get model score for model: SupportVectorMachine(C=20).
2021-02-19 16:43:45 - pipeline_training.py - INFO - Model: SupportVectorMachine(C=20) get score: 0.7765.
2021-02-19 17:06:24 - logger - INFO - Start logging for `logger`
2021-02-19 18:17:24 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-19 18:17:25 - neural_network_search.py - INFO - Get 3 classes problem.
2021-02-19 18:17:25 - neural_network_search.py - INFO - Start to get model instance for algorithms: Adam	SGD
2021-02-19 18:17:25 - neural_network_search.py - INFO - Start to use search algorithm: RandomSearch to find models.
2021-02-19 18:17:25 - neural_network_search.py - INFO - Whole fitting logic finished used 0.0 seconds.
2021-02-19 18:20:06 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-19 18:20:51 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
2021-02-19 18:24:36 - neural_network_search.py - INFO - Start logging for `neural_network_search.py`
